{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\QuestionInput.jsx\";\nimport React, { Component } from 'react';\nimport { Input, InputNumber, Tooltip, Divider, Form } from 'antd';\nimport VariableForm from './VariableForm';\nimport VariablePicker from './VariablePicker';\n\nvar QuestionInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionInput, _Component);\n\n  function QuestionInput(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionInput).call(this, props));\n\n    _this.handleChange = function (event) {\n      var value = event.target.value;\n\n      _this.setState({\n        value: value\n      });\n\n      _this.parseVariableNames(value);\n    };\n\n    _this.state = {\n      value: '',\n      variables: []\n    };\n    return _this;\n  }\n\n  _createClass(QuestionInput, [{\n    key: \"parseVariableNames\",\n    value: function parseVariableNames(value) {\n      var _this2 = this;\n\n      var variableRegex = /\\{.*?\\}/g;\n      var matches = value.match(variableRegex);\n\n      if (matches) {\n        matches = _toConsumableArray(new Set(matches));\n        var counter = -1;\n        matches = matches.map(function (m) {\n          return m.replace(\"{\", \"\").replace(\"}\", \"\");\n        });\n        var variables = [];\n        matches.map(function (m) {\n          counter++; // new variable created\n\n          if (matches.length != _this2.state.variables.length) {\n            var match = _this2.state.variables.filter(function (k) {\n              return k.name == m;\n            });\n\n            if (match.length > 0) {\n              // variable already exists\n              variables.push(match[0]);\n            } else {\n              // new variable\n              variables.push({\n                key: counter,\n                name: m\n              });\n            } // unrelated update or rename\n\n          } else {\n            var nameMatch = _this2.state.variables.filter(function (k) {\n              return k.name == m;\n            });\n\n            if (nameMatch.length > 0) {\n              variables.push(nameMatch[0]);\n            }\n\n            var counterMatch = _this2.state.variables.filter(function (k) {\n              return k.key == counter;\n            });\n\n            console.log(nameMatch);\n            variables.push(counterMatch[0]);\n          }\n        }); // console.log(variables)\n\n        this.setState({\n          variables: variables\n        });\n      }\n    }\n  }, {\n    key: \"createVariable\",\n    value: function createVariable(item) {\n      var name = item.name,\n          min = item.min,\n          max = item.max,\n          step = item.step;\n      return React.createElement(VariableForm, {\n        min: min,\n        max: max,\n        step: step,\n        name: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var variables = this.state.variables; // console.log(variables)\n\n      variables = variables.map(function (v) {\n        return _this3.createVariable(v);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.value,\n        onChange: function onChange(event) {\n          return _this3.handleChange(event);\n        },\n        onBlur: function onBlur(event) {\n          return _this3.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, variables));\n    }\n  }]);\n\n  return QuestionInput;\n}(Component);\n\nexport default QuestionInput;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\QuestionInput.jsx"],"names":["React","Component","Input","InputNumber","Tooltip","Divider","Form","VariableForm","VariablePicker","QuestionInput","props","handleChange","event","value","target","setState","parseVariableNames","state","variables","variableRegex","matches","match","Set","counter","map","m","replace","length","filter","k","name","push","key","nameMatch","counterMatch","console","log","item","min","max","step","v","createVariable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input, InputNumber, Tooltip, Divider, Form } from 'antd';\r\nimport VariableForm from './VariableForm'\r\nimport VariablePicker from './VariablePicker'\r\n\r\nclass QuestionInput extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      variables: [],\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    let { value } = event.target;\r\n    this.setState({ value });\r\n    this.parseVariableNames(value);\r\n  }\r\n\r\n  parseVariableNames(value) {\r\n    let variableRegex = /\\{.*?\\}/g;\r\n    let matches = value.match(variableRegex);\r\n    if (matches){\r\n      matches = [...new Set(matches)]\r\n      let counter = -1;\r\n      matches = matches.map(m => m.replace(\"{\", \"\").replace(\"}\", \"\"));\r\n\r\n      let variables = []\r\n\r\n      matches.map(m => {\r\n        counter++;\r\n        // new variable created\r\n        if (matches.length != this.state.variables.length){\r\n          let match = this.state.variables.filter(k => k.name == m)\r\n          if (match.length > 0){\r\n            // variable already exists\r\n            variables.push(match[0])\r\n          } else{\r\n            // new variable\r\n            variables.push({ key: counter, name: m })\r\n          }\r\n\r\n        // unrelated update or rename\r\n        } else {\r\n          let nameMatch = this.state.variables.filter(k => k.name == m)\r\n          if (nameMatch.length > 0){\r\n            variables.push(nameMatch[0])\r\n          }\r\n          let counterMatch = this.state.variables.filter(k => k.key == counter);\r\n          console.log(nameMatch)\r\n          variables.push(counterMatch[0])\r\n        }\r\n      });\r\n      // console.log(variables)\r\n      this.setState({ variables })\r\n    }\r\n  }\r\n\r\n  createVariable(item) {\r\n    let { name, min, max, step } = item;\r\n\r\n    return (\r\n      <VariableForm\r\n        min={ min }\r\n        max={ max }\r\n        step={ step }\r\n        name={ name } />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let { variables } = this.state;\r\n    // console.log(variables)\r\n    variables = variables.map(v => this.createVariable(v));\r\n    return (\r\n      <div>\r\n        <Input\r\n          value={ this.state.value }\r\n          onChange={event => this.handleChange(event) }\r\n          onBlur={event => this.handleChange(event) }\r\n          />\r\n        <Form>\r\n          {variables}\r\n        </Form>\r\n      </div>\r\n\r\n    )\r\n  };\r\n}\r\n\r\nexport default QuestionInput;\r\n"]},"metadata":{},"sourceType":"module"}