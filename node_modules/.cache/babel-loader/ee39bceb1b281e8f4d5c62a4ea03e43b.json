{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\QuestionInput.jsx\";\nimport React, { Component } from 'react';\nimport { Input, InputNumber, Tooltip, Divider, Form, Collapse } from 'antd';\nimport VariableForm from './VariableForm';\nimport VariablePicker from './VariablePicker';\nimport NameInput from './NameInput';\nimport ObjectInput from './ObjectInput';\nvar Panel = Collapse.Panel;\n\nString.prototype.replaceAt = function (index, replacement) {\n  return this.substr(0, index + 1) + replacement + this.substr(index + replacement.length);\n};\n\nString.prototype.replaceAll = function (search, replacement) {\n  var target = this;\n  return target.replace(new RegExp(search, 'g'), replacement);\n};\n\nvar QuestionInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionInput, _Component);\n\n  function QuestionInput(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionInput).call(this, props));\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          value = _event$target.value,\n          selectionStart = _event$target.selectionStart,\n          selectionEnd = _event$target.selectionEnd;\n\n      _this.setState({\n        value: value\n      });\n\n      _this.parseVariableNames(value);\n    };\n\n    _this.handleKeyUp = function (event) {// let { selectionStart, selectionEnd, value } = event.target;\n      // console.log(event.key)\n      // if (event.key === '['){\n      //   event.preventDefault();\n      //   if (selectionStart < selectionEnd){\n      //\n      //   } else {\n      //     value = value.replaceAt(selectionStart-1, '}')\n      //   }\n      // }\n      // console.log('keydown', value)\n      // event.target.setSelectionRange(selectionStart, selectionStart)\n      // this.setState({ value })\n      // event.target.setSelectionRange(selectionStart, selectionStart)\n    };\n\n    _this.handleUnitChange = function (unit, key) {\n      var variables = _this.state.variables.filter(function (k) {\n        return k.key == key;\n      })[0];\n\n      variables.unit = unit;\n\n      _this.setState({\n        variables: variables && _this.state.variables\n      });\n    };\n\n    _this.handleStepChange = function (step, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key == key;\n      })[0];\n\n      variable.step = step;\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.handleMinChange = function (min, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key == key;\n      })[0];\n\n      variable.min = min;\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.handleMaxChange = function (max, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key == key;\n      })[0];\n\n      variable.max = max;\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.state = {\n      value: '',\n      variables: []\n    };\n    return _this;\n  }\n\n  _createClass(QuestionInput, [{\n    key: \"parseVariableNames\",\n    value: function parseVariableNames(value) {\n      var _this2 = this;\n\n      var variableRegex = /\\{[^\\{]*?\\}/g;\n      var matches = value.match(variableRegex);\n\n      if (matches) {\n        matches = _toConsumableArray(new Set(matches));\n        var counter = -1;\n        matches = matches.map(function (m) {\n          return m.replaceAll(\"{\", \"\").replaceAll(\"}\", \"\");\n        });\n        var variables = [];\n        matches.map(function (m) {\n          counter++;\n\n          if (matches.length != _this2.state.variables.length) {\n            // new variable created\n            var match = _this2.state.variables.filter(function (k) {\n              return k.name == m;\n            });\n\n            if (match.length > 0) {\n              console.log('same', match[0]);\n              match[0].key = counter; // variable already exists, so we just return it\n\n              variables.push(match[0]);\n            } else {\n              console.log('new', counter, m); // new variable, so we must make a new blank version\n\n              variables.push({\n                key: counter,\n                name: m,\n                step: 1,\n                min: 0,\n                max: 0,\n                unit: []\n              });\n            }\n          } else {\n            // unrelated update or a rename\n            var nameMatch = _this2.state.variables.filter(function (k) {\n              return k.name == m;\n            });\n\n            var counterMatch = _this2.state.variables.filter(function (k) {\n              return k.key == counter;\n            });\n\n            if (nameMatch.length > 0) {\n              // name was found, was not renamed\n              variables.push(nameMatch[0]);\n            } else if (counterMatch.length > 0) {\n              // name not found, so it must've been renamed\n              counterMatch[0].name = m;\n              variables.push(counterMatch[0]);\n            }\n          }\n        });\n        this.setState({\n          variables: variables\n        });\n      } else {\n        this.setState({\n          variables: []\n        });\n      }\n    }\n  }, {\n    key: \"renderVariable\",\n    value: function renderVariable(item) {\n      var _this3 = this;\n\n      var name = item.name,\n          min = item.min,\n          max = item.max,\n          step = item.step,\n          key = item.key,\n          unit = item.unit;\n      var nameRegex = /^name\\s*(\\d*)$/gi;\n      var match = nameRegex.exec(name);\n\n      if (match) {\n        return React.createElement(NameInput, {\n          number: match[1],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(VariableForm, {\n        onUnitChange: function onUnitChange(unit, key) {\n          return _this3.handleUnitChange(unit, key);\n        },\n        onStepChange: function onStepChange(step, key) {\n          return _this3.handleStepChange(step, key);\n        },\n        onMinChange: function onMinChange(min, key) {\n          return _this3.handleMinChange(min, key);\n        },\n        onMaxChange: function onMaxChange(max, key) {\n          return _this3.handleMaxChange(max, key);\n        },\n        uniqueKey: key,\n        unit: unit,\n        min: min,\n        max: max,\n        step: step,\n        name: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var variables = this.state.variables; // console.log('variables', variables)\n\n      variables = variables.map(function (v) {\n        return _this4.renderVariable(v);\n      });\n      return React.createElement(Panel, {\n        header: React.createElement(Input.TextArea, {\n          autosize: true,\n          value: this.state.value,\n          onChange: function onChange(event) {\n            return _this4.handleChange(event);\n          },\n          onKeyUp: function onKeyUp(event) {\n            return _this4.handleKeyUp(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }),\n        style: {\n          marginBottom: '10px'\n        },\n        key: this.props.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return QuestionInput;\n}(Component);\n\nexport default QuestionInput;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\QuestionInput.jsx"],"names":["React","Component","Input","InputNumber","Tooltip","Divider","Form","Collapse","VariableForm","VariablePicker","NameInput","ObjectInput","Panel","String","prototype","replaceAt","index","replacement","substr","length","replaceAll","search","target","replace","RegExp","QuestionInput","props","handleChange","event","value","selectionStart","selectionEnd","setState","parseVariableNames","handleKeyUp","handleUnitChange","unit","key","variables","state","filter","k","handleStepChange","step","variable","handleMinChange","min","handleMaxChange","max","variableRegex","matches","match","Set","counter","map","m","name","console","log","push","nameMatch","counterMatch","item","nameRegex","exec","v","renderVariable","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input, InputNumber, Tooltip, Divider, Form, Collapse } from 'antd';\r\nimport VariableForm from './VariableForm'\r\nimport VariablePicker from './VariablePicker'\r\nimport NameInput from './NameInput'\r\nimport ObjectInput from './ObjectInput'\r\n\r\nconst Panel = Collapse.Panel;\r\n\r\nString.prototype.replaceAt=function(index, replacement) {\r\n    return this.substr(0, index+1) + replacement+ this.substr(index + replacement.length);\r\n}\r\nString.prototype.replaceAll = function(search, replacement) {\r\n    var target = this;\r\n    return target.replace(new RegExp(search, 'g'), replacement);\r\n};\r\n\r\n\r\nclass QuestionInput extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      variables: [],\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    let { value, selectionStart, selectionEnd } = event.target;\r\n    this.setState({ value });\r\n    this.parseVariableNames(value);\r\n  }\r\n\r\n  handleKeyUp = event => {\r\n    // let { selectionStart, selectionEnd, value } = event.target;\r\n    // console.log(event.key)\r\n    // if (event.key === '['){\r\n    //   event.preventDefault();\r\n    //   if (selectionStart < selectionEnd){\r\n    //\r\n    //   } else {\r\n    //     value = value.replaceAt(selectionStart-1, '}')\r\n    //   }\r\n    // }\r\n    // console.log('keydown', value)\r\n    // event.target.setSelectionRange(selectionStart, selectionStart)\r\n    // this.setState({ value })\r\n    // event.target.setSelectionRange(selectionStart, selectionStart)\r\n  }\r\n\r\n  parseVariableNames(value) {\r\n    let variableRegex = /\\{[^\\{]*?\\}/g;\r\n    let matches = value.match(variableRegex);\r\n\r\n    if (matches){\r\n      matches = [...new Set(matches)]\r\n      let counter = -1;\r\n      matches = matches.map(m => m.replaceAll(\"{\", \"\").replaceAll(\"}\", \"\"));\r\n\r\n      let variables = []\r\n\r\n      matches.map(m => {\r\n        counter++;\r\n        if (matches.length != this.state.variables.length){\r\n          // new variable created\r\n          let match = this.state.variables.filter(k => k.name == m)\r\n\r\n          if (match.length > 0){\r\n            console.log('same', match[0])\r\n            match[0].key = counter;\r\n            // variable already exists, so we just return it\r\n            variables.push(match[0])\r\n\r\n          } else{\r\n            console.log('new', counter, m)\r\n            // new variable, so we must make a new blank version\r\n            variables.push({ key: counter, name: m, step: 1, min: 0, max: 0, unit: [] })\r\n          }\r\n\r\n        } else {\r\n          // unrelated update or a rename\r\n          let nameMatch = this.state.variables.filter(k => k.name == m);\r\n          let counterMatch = this.state.variables.filter(k => k.key == counter);\r\n\r\n          if (nameMatch.length > 0){\r\n            // name was found, was not renamed\r\n            variables.push(nameMatch[0])\r\n\r\n          } else if (counterMatch.length > 0){\r\n            // name not found, so it must've been renamed\r\n            counterMatch[0].name = m;\r\n            variables.push(counterMatch[0])\r\n          }\r\n        }\r\n      });\r\n      this.setState({ variables })\r\n    } else {\r\n      this.setState({ variables: [] })\r\n    }\r\n  }\r\n\r\n  handleUnitChange = (unit, key) => {\r\n    let variables = this.state.variables.filter(k => k.key == key)[0];\r\n    variables.unit = unit;\r\n    this.setState({ variables: variables&&this.state.variables })\r\n  }\r\n\r\n  handleStepChange = (step, key) => {\r\n    let variable = this.state.variables.filter(k => k.key == key)[0];\r\n    variable.step = step;\r\n    this.setState({ variables: variable&&this.state.variables })\r\n  }\r\n\r\n  handleMinChange = (min, key) => {\r\n    let variable = this.state.variables.filter(k => k.key == key)[0];\r\n    variable.min = min;\r\n    this.setState({ variables: variable&&this.state.variables })\r\n  }\r\n\r\n  handleMaxChange = (max, key) => {\r\n    let variable = this.state.variables.filter(k => k.key == key)[0];\r\n    variable.max = max;\r\n    this.setState({ variables: variable&&this.state.variables })\r\n  }\r\n\r\n  renderVariable(item) {\r\n    let { name, min, max, step, key, unit } = item;\r\n\r\n    let nameRegex = /^name\\s*(\\d*)$/gi;\r\n    let match = nameRegex.exec(name);\r\n\r\n    if (match){\r\n      return <NameInput number={match[1]} />\r\n    }\r\n\r\n    return (\r\n      <VariableForm\r\n        onUnitChange={(unit, key) => this.handleUnitChange(unit, key) }\r\n        onStepChange={(step, key) => this.handleStepChange(step, key) }\r\n        onMinChange={(min, key) => this.handleMinChange(min, key) }\r\n        onMaxChange={(max, key) => this.handleMaxChange(max, key) }\r\n        uniqueKey={ key }\r\n        unit={ unit }\r\n        min={ min }\r\n        max={ max }\r\n        step={ step }\r\n        name={ name }\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let { variables } = this.state;\r\n    // console.log('variables', variables)\r\n    variables = variables.map(v => this.renderVariable(v));\r\n    return (\r\n        <Panel\r\n          header={<Input.TextArea\r\n                    autosize={ true }\r\n                    value={ this.state.value }\r\n                    onChange={event => this.handleChange(event) }\r\n                    onKeyUp={event => this.handleKeyUp(event)}\r\n                  />}\r\n          style={{ marginBottom: '10px' }}\r\n          key={ this.props.key }>\r\n          \r\n        </Panel>\r\n\r\n    )\r\n  };\r\n}\r\n\r\nexport default QuestionInput;\r\n"]},"metadata":{},"sourceType":"module"}