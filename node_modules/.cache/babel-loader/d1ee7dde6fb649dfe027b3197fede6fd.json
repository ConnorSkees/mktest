{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\MultipleChoice.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Input, Form, Collapse, Icon } from 'antd';\nimport VariableForm from './VariableForm';\nimport NameInput from './NameInput';\nimport ObjectInput from './ObjectInput';\nimport Disappear from './Disappear';\nvar Panel = Collapse.Panel;\nvar TextAreaStyle = {\n  width: '80%',\n  display: 'inline-block',\n  border: 'none',\n  fontFamily: \"'Sarabun', sans-serif\",\n  fontSize: '2em'\n};\nvar CollapseStyle = {\n  marginBottom: 25\n};\n\nvar MultipleChoice =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MultipleChoice, _Component);\n\n  function MultipleChoice(props) {\n    var _this;\n\n    _classCallCheck(this, MultipleChoice);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultipleChoice).call(this, props));\n\n    _this.toggle = function (e) {\n      return _this.setState(function (state) {\n        return {\n          isVisible: !state.isVisible\n        };\n      });\n    };\n\n    _this.handleDelete = function (e) {\n      _this.toggle();\n\n      _this.props.onDelete();\n    };\n\n    _this.renderChoice = function (choice) {};\n\n    _this.state = {\n      value: '',\n      choices: [],\n      isFocused: false,\n      isVisible: true\n    };\n    return _this;\n  }\n\n  _createClass(MultipleChoice, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          choices = _this$state.choices,\n          isFocused = _this$state.isFocused,\n          isVisible = _this$state.isVisible;\n      var key = this.props.uniqueKey; // console.log('choices', JSON.stringify(choices));\n\n      var ButtonStyle = {\n        float: 'right',\n        display: choices.length > 0 ? 'inline-block' : 'none'\n      };\n      choices = choices.map(function (c) {\n        return _this2.renderChoice(c);\n      });\n      return React.createElement(Disappear, {\n        isVisible: isVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Collapse, {\n        style: CollapseStyle,\n        activeKey: isFocused ? key + 'p' : null,\n        bordered: false,\n        key: key + 'c',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        showArrow: false,\n        header: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Input.TextArea, {\n          placeholder: 'Your question here',\n          autosize: true,\n          value: this.state.value,\n          onChange: function onChange(event) {\n            return _this2.handleChange(event);\n          },\n          key: key + 'i',\n          style: TextAreaStyle,\n          onFocus: function onFocus() {\n            return _this2.setState({\n              isFocused: choices.length > 0\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(Button, {\n          size: \"large\",\n          style: ButtonStyle,\n          onClick: function onClick() {\n            return _this2.setState({\n              isFocused: !isFocused\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, isFocused ? 'Hide' : 'Show'), React.createElement(Button, {\n          size: \"large\",\n          type: \"danger\",\n          style: _objectSpread({}, ButtonStyle, {\n            display: 'inline-block'\n          }),\n          onClick: this.handleDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"minus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }))),\n        key: key + 'p',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, choices))));\n    }\n  }]);\n\n  return MultipleChoice;\n}(Component);\n\nexport default MultipleChoice;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\MultipleChoice.jsx"],"names":["React","Component","Button","Input","Form","Collapse","Icon","VariableForm","NameInput","ObjectInput","Disappear","Panel","TextAreaStyle","width","display","border","fontFamily","fontSize","CollapseStyle","marginBottom","MultipleChoice","props","toggle","e","setState","state","isVisible","handleDelete","onDelete","renderChoice","choice","value","choices","isFocused","key","uniqueKey","ButtonStyle","float","length","map","c","event","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Input, Form, Collapse, Icon } from 'antd';\r\nimport VariableForm from './VariableForm'\r\nimport NameInput from './NameInput'\r\nimport ObjectInput from './ObjectInput'\r\nimport Disappear from './Disappear'\r\n\r\nconst Panel = Collapse.Panel;\r\n\r\nconst TextAreaStyle = {\r\n  width: '80%',\r\n  display: 'inline-block',\r\n  border: 'none',\r\n  fontFamily: \"'Sarabun', sans-serif\",\r\n  fontSize: '2em',\r\n}\r\n\r\nconst CollapseStyle = {\r\n  marginBottom: 25\r\n}\r\n\r\nclass MultipleChoice extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      choices: [],\r\n      isFocused: false,\r\n      isVisible: true,\r\n    };\r\n  }\r\n\r\n\r\n  toggle = e => this.setState(state => ({ isVisible: !state.isVisible }))\r\n\r\n  handleDelete = e => {\r\n    this.toggle()\r\n    this.props.onDelete()\r\n  }\r\n\r\n  renderChoice = choice => {\r\n\r\n  }\r\n\r\n  render() {\r\n    let { choices, isFocused, isVisible } = this.state;\r\n    let key = this.props.uniqueKey;\r\n    // console.log('choices', JSON.stringify(choices));\r\n    let ButtonStyle = {\r\n      float: 'right',\r\n      display: choices.length > 0 ? 'inline-block' : 'none',\r\n    }\r\n\r\n    choices = choices.map(c => this.renderChoice(c));\r\n    return (\r\n      <Disappear isVisible={isVisible}>\r\n        <Collapse\r\n          style={ CollapseStyle }\r\n          activeKey={isFocused ? key+'p' : null}\r\n          bordered={false}\r\n          key={ key+'c' }>\r\n          <Panel\r\n            showArrow={ false }\r\n            header={\r\n              <div>\r\n                <Input.TextArea\r\n                    placeholder={ 'Your question here' }\r\n                    autosize={ true }\r\n                    value={ this.state.value }\r\n                    onChange={ event => this.handleChange(event) }\r\n                    key={ key+'i' }\r\n                    style={ TextAreaStyle }\r\n                    onFocus={() => this.setState({ isFocused: choices.length > 0 }) }\r\n                  />\r\n                <Button\r\n                  size='large'\r\n                  style={ ButtonStyle }\r\n                  onClick={() => this.setState({ isFocused: !isFocused }) }>\r\n                  { isFocused ? 'Hide' : 'Show' }\r\n                </Button>\r\n                <Button\r\n                  size='large'\r\n                  type='danger'\r\n                  style={{ ...ButtonStyle, display: 'inline-block' }}\r\n                  onClick={ this.handleDelete }\r\n                  >\r\n                  <Icon type=\"minus\" />\r\n                </Button>\r\n                </div>}\r\n\r\n            key={ key+'p' }>\r\n            <Form>\r\n              {choices}\r\n            </Form>\r\n          </Panel>\r\n        </Collapse>\r\n      </Disappear>\r\n    )\r\n  };\r\n}\r\n\r\nexport default MultipleChoice;\r\n"]},"metadata":{},"sourceType":"module"}