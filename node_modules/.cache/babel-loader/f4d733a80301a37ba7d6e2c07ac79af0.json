{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\QuestionInput.jsx\";\nimport React, { Component } from 'react';\nimport { Input, InputNumber, Tooltip, Divider, Form } from 'antd';\nimport VariableForm from './VariableForm';\nimport VariablePicker from './VariablePicker';\n\nString.prototype.replaceAt = function (index, replacement) {\n  return this.substr(0, index) + replacement + this.substr(index + replacement.length);\n};\n\nvar QuestionInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionInput, _Component);\n\n  function QuestionInput(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionInput).call(this, props));\n\n    _this.handleVariableChange = function (unit, key) {\n      var variables = _this.state.variables.filter(function (k) {\n        return k.key == key;\n      })[0];\n\n      variables.unit = unit;\n\n      _this.setState({\n        variables: variables && _this.state.variables\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var value = event.target.value; // console.log(event.key)\n\n      _this.setState({\n        value: value\n      });\n\n      _this.parseVariableNames(value);\n    };\n\n    _this.handleKeyDown = function (event) {\n      var _event$target = event.target,\n          selectionStart = _event$target.selectionStart,\n          selectionEnd = _event$target.selectionEnd,\n          value = _event$target.value;\n\n      if (event.key === '{') {\n        if (selectionStart < selectionEnd) {} else {\n          value = value.replaceAt(selectionStart + 1, '{}');\n          console.log(value);\n\n          _this.setState({\n            value: value\n          });\n        }\n      }\n    };\n\n    _this.handleStepChange = function (step, key) {\n      var variables = _this.state.variables.filter(function (k) {\n        return k.key == key;\n      })[0];\n\n      variables.step = step;\n\n      _this.setState({\n        variables: variables && _this.state.variables\n      });\n    };\n\n    _this.state = {\n      value: '',\n      variables: []\n    };\n    return _this;\n  }\n\n  _createClass(QuestionInput, [{\n    key: \"parseVariableNames\",\n    value: function parseVariableNames(value) {\n      var _this2 = this;\n\n      var variableRegex = /\\{.*?\\}/g;\n      var matches = value.match(variableRegex);\n\n      if (matches) {\n        matches = _toConsumableArray(new Set(matches));\n        var counter = -1;\n        matches = matches.map(function (m) {\n          return m.replace(\"{\", \"\").replace(\"}\", \"\");\n        }).filter(function (x) {\n          return x.indexOf(\"{\") === -1;\n        });\n        var variables = [];\n        matches.map(function (m) {\n          counter++;\n\n          if (matches.length != _this2.state.variables.length) {\n            // new variable created\n            var match = _this2.state.variables.filter(function (k) {\n              return k.name == m;\n            });\n\n            if (match.length > 0) {\n              // variable already exists, so we just return it\n              variables.push(match[0]);\n            } else {\n              // new variable, so we must make a new blank version\n              variables.push({\n                key: counter,\n                name: m,\n                step: 1\n              });\n            }\n          } else {\n            // unrelated update or a rename\n            var nameMatch = _this2.state.variables.filter(function (k) {\n              return k.name == m;\n            });\n\n            var counterMatch = _this2.state.variables.filter(function (k) {\n              return k.key == counter;\n            });\n\n            if (nameMatch.length > 0) {\n              // name was found, was not renamed\n              variables.push(nameMatch[0]);\n            } else if (counterMatch.length > 0) {\n              // name not found, so it must've been renamed\n              counterMatch[0].name = m;\n              variables.push(counterMatch[0]);\n            }\n          }\n        });\n        this.setState({\n          variables: variables\n        });\n      } else {\n        this.setState({\n          variables: []\n        });\n      }\n    }\n  }, {\n    key: \"renderVariable\",\n    value: function renderVariable(item) {\n      var _this3 = this;\n\n      var name = item.name,\n          min = item.min,\n          max = item.max,\n          step = item.step,\n          key = item.key;\n      return React.createElement(VariableForm, {\n        onUnitChange: function onUnitChange(unit, key) {\n          return _this3.handleVariableChange(unit, key);\n        },\n        onStepChange: function onStepChange(step, key) {\n          return _this3.handleStepChange(step, key);\n        },\n        uniqueKey: key,\n        min: min,\n        max: max,\n        step: step,\n        name: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var variables = this.state.variables; // console.log('variables', variables)\n\n      variables = variables.map(function (v) {\n        return _this4.renderVariable(v);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.value,\n        onChange: function onChange(event) {\n          return _this4.handleChange(event);\n        },\n        onKeyDown: function onKeyDown(event) {\n          return _this4.handleKeyDown(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, variables));\n    }\n  }]);\n\n  return QuestionInput;\n}(Component);\n\nexport default QuestionInput;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\QuestionInput.jsx"],"names":["React","Component","Input","InputNumber","Tooltip","Divider","Form","VariableForm","VariablePicker","String","prototype","replaceAt","index","replacement","substr","length","QuestionInput","props","handleVariableChange","unit","key","variables","state","filter","k","setState","handleChange","event","value","target","parseVariableNames","handleKeyDown","selectionStart","selectionEnd","console","log","handleStepChange","step","variableRegex","matches","match","Set","counter","map","m","replace","x","indexOf","name","push","nameMatch","counterMatch","item","min","max","v","renderVariable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input, InputNumber, Tooltip, Divider, Form } from 'antd';\r\nimport VariableForm from './VariableForm'\r\nimport VariablePicker from './VariablePicker'\r\n\r\nString.prototype.replaceAt=function(index, replacement) {\r\n    return this.substr(0, index) + replacement+ this.substr(index + replacement.length);\r\n}\r\n\r\n\r\nclass QuestionInput extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      variables: [],\r\n    };\r\n  }\r\n\r\n  handleVariableChange = (unit, key) => {\r\n    let variables = this.state.variables.filter(k => k.key == key)[0];\r\n    variables.unit = unit;\r\n    this.setState({ variables: variables&&this.state.variables })\r\n  }\r\n\r\n  handleChange = event => {\r\n    let { value } = event.target;\r\n    // console.log(event.key)\r\n    this.setState({ value });\r\n    this.parseVariableNames(value);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    let { selectionStart, selectionEnd, value } = event.target;\r\n    if (event.key === '{'){\r\n      if (selectionStart < selectionEnd){\r\n\r\n      } else {\r\n        value = value.replaceAt(selectionStart+1, '{}')\r\n        console.log(value)\r\n        this.setState({ value })\r\n      }\r\n    }\r\n  }\r\n\r\n  parseVariableNames(value) {\r\n    let variableRegex = /\\{.*?\\}/g;\r\n    let matches = value.match(variableRegex);\r\n    if (matches){\r\n      matches = [...new Set(matches)]\r\n      let counter = -1;\r\n      matches = matches.map(m => m.replace(\"{\", \"\").replace(\"}\", \"\")).filter(x => x.indexOf(\"{\") === -1);\r\n\r\n      let variables = []\r\n\r\n      matches.map(m => {\r\n        counter++;\r\n        if (matches.length != this.state.variables.length){\r\n          // new variable created\r\n          let match = this.state.variables.filter(k => k.name == m)\r\n\r\n          if (match.length > 0){\r\n            // variable already exists, so we just return it\r\n            variables.push(match[0])\r\n\r\n          } else{\r\n            // new variable, so we must make a new blank version\r\n            variables.push({ key: counter, name: m, step: 1 })\r\n          }\r\n\r\n        } else {\r\n          // unrelated update or a rename\r\n          let nameMatch = this.state.variables.filter(k => k.name == m);\r\n          let counterMatch = this.state.variables.filter(k => k.key == counter);\r\n\r\n          if (nameMatch.length > 0){\r\n            // name was found, was not renamed\r\n            variables.push(nameMatch[0])\r\n\r\n          } else if (counterMatch.length > 0){\r\n            // name not found, so it must've been renamed\r\n            counterMatch[0].name = m;\r\n            variables.push(counterMatch[0])\r\n          }\r\n        }\r\n      });\r\n      this.setState({ variables })\r\n    } else {\r\n      this.setState({ variables: [] })\r\n    }\r\n  }\r\n\r\n  handleStepChange = (step, key) => {\r\n    let variables = this.state.variables.filter(k => k.key == key)[0];\r\n    variables.step = step;\r\n    this.setState({ variables: variables&&this.state.variables })\r\n  }\r\n\r\n  renderVariable(item) {\r\n    let { name, min, max, step, key } = item;\r\n\r\n    return (\r\n      <VariableForm\r\n        onUnitChange={(unit, key) => this.handleVariableChange(unit, key) }\r\n        onStepChange={(step, key) => this.handleStepChange(step, key) }\r\n        uniqueKey={ key }\r\n        min={ min }\r\n        max={ max }\r\n        step={ step }\r\n        name={ name } />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let { variables } = this.state;\r\n    // console.log('variables', variables)\r\n    variables = variables.map(v => this.renderVariable(v));\r\n    return (\r\n      <div>\r\n        <Input\r\n          value={ this.state.value }\r\n          onChange={event => this.handleChange(event) }\r\n          onKeyDown={event => this.handleKeyDown(event)}\r\n          />\r\n        <Form>\r\n          {variables}\r\n        </Form>\r\n      </div>\r\n\r\n    )\r\n  };\r\n}\r\n\r\nexport default QuestionInput;\r\n"]},"metadata":{},"sourceType":"module"}