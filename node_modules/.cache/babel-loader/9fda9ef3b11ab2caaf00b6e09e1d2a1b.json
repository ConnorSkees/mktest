{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\QuestionInput.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Input, Form, Collapse } from 'antd';\nimport VariableForm from './VariableForm';\nimport NameInput from './NameInput';\nimport ObjectInput from './ObjectInput';\nvar Panel = Collapse.Panel;\n\nString.prototype.replaceAt = function (index, replacement) {\n  return this.substr(0, index + 1) + replacement + this.substr(index + replacement.length);\n};\n\nString.prototype.replaceAll = function (search, replacement) {\n  var target = this;\n  return target.replace(new RegExp(search, 'g'), replacement);\n};\n\nvar TextAreaStyle = {\n  width: '80%',\n  display: 'inline-block',\n  border: 'none',\n  fontFamily: \"'Sarabun', sans-serif\",\n  fontSize: '2em'\n};\n\nvar QuestionInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionInput, _Component);\n\n  function QuestionInput(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionInput).call(this, props));\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          value = _event$target.value,\n          selectionStart = _event$target.selectionStart,\n          selectionEnd = _event$target.selectionEnd;\n      var _this$state = _this.state,\n          variables = _this$state.variables,\n          isFocused = _this$state.isFocused;\n\n      _this.setState({\n        value: value,\n        isFocused: variables.length > 0\n      });\n\n      _this.parseVariableNames(value);\n    };\n\n    _this.handleUnitChange = function (unit, key) {\n      var variables = _this.state.variables.filter(function (k) {\n        return k.key === key;\n      })[0];\n\n      variables.unit = unit;\n\n      _this.setState({\n        variables: variables && _this.state.variables\n      });\n    };\n\n    _this.handleStepChange = function (step, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key === key;\n      })[0];\n\n      variable.step = step;\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.handleMinChange = function (min, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key === key;\n      })[0];\n\n      variable.min = min;\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.handleMaxChange = function (max, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key === key;\n      })[0];\n\n      variable.max = max;\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.handleNameChange = function (name, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key === key;\n      })[0];\n\n      delete variable.min;\n      delete variable.max;\n      delete variable.step;\n      delete variable.unit;\n      variable.nameValue = name.replaceAll('undefined', '');\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.doNothing = function (event) {\n      console.log('nothing');\n    };\n\n    _this.state = {\n      value: '',\n      variables: [],\n      isFocused: false\n    };\n    return _this;\n  }\n\n  _createClass(QuestionInput, [{\n    key: \"parseVariableNames\",\n    value: function parseVariableNames(value) {\n      var _this2 = this;\n\n      var variableRegex = /\\[[^\\[]*?\\]/g;\n      var matches = value.match(variableRegex);\n\n      if (matches) {\n        matches = _toConsumableArray(new Set(matches));\n        var counter = -1;\n        matches = matches.map(function (m) {\n          return m.replaceAll(/\\[/, \"\").replaceAll(/\\]/, \"\");\n        });\n        var variables = [];\n        matches.map(function (m) {\n          counter++;\n\n          if (matches.length !== _this2.state.variables.length) {\n            // new variable created\n            var match = _this2.state.variables.filter(function (k) {\n              return k.name === m;\n            });\n\n            if (match.length > 0) {\n              match[0].key = counter; // variable already exists, so we just return it\n\n              variables.push(match[0]);\n            } else {\n              // new variable, so we must make a new blank version\n              variables.push({\n                key: counter,\n                name: m,\n                step: 1,\n                min: 0,\n                max: 0,\n                unit: []\n              });\n            }\n          } else {\n            // unrelated update or a rename\n            var nameMatch = _this2.state.variables.filter(function (k) {\n              return k.name === m;\n            });\n\n            var counterMatch = _this2.state.variables.filter(function (k) {\n              return k.key === counter;\n            });\n\n            if (nameMatch.length > 0) {\n              // name was found, was not renamed\n              variables.push(nameMatch[0]);\n            } else if (counterMatch.length > 0) {\n              // name not found, so it must've been renamed\n              counterMatch[0].name = m;\n              variables.push(counterMatch[0]);\n            }\n          }\n        });\n        this.setState({\n          variables: variables\n        });\n      } else {\n        this.setState({\n          variables: []\n        });\n      }\n    }\n  }, {\n    key: \"renderVariable\",\n    value: function renderVariable(item) {\n      var _this3 = this;\n\n      var name = item.name,\n          key = item.key;\n      var nameRegex = /^name\\s*(\\d*)$/gi;\n      var match = nameRegex.exec(name);\n\n      if (match) {\n        return React.createElement(NameInput, {\n          key: key,\n          number: match[1],\n          name: name,\n          onNameChange: function onNameChange(name) {\n            return _this3.handleNameChange(name, key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        });\n      }\n\n      var min = item.min,\n          max = item.max,\n          step = item.step,\n          unit = item.unit;\n      return React.createElement(VariableForm, {\n        onUnitChange: function onUnitChange(unit, key) {\n          return _this3.handleUnitChange(unit, key);\n        },\n        onStepChange: function onStepChange(step, key) {\n          return _this3.handleStepChange(step, key);\n        },\n        onMinChange: function onMinChange(min, key) {\n          return _this3.handleMinChange(min, key);\n        },\n        onMaxChange: function onMaxChange(max, key) {\n          return _this3.handleMaxChange(max, key);\n        },\n        uniqueKey: key,\n        unit: unit,\n        min: min,\n        max: max,\n        step: step,\n        name: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"exportAsJSON\",\n    value: function exportAsJSON() {\n      var variables = this.state.variables;\n      return variables;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          variables = _this$state2.variables,\n          isFocused = _this$state2.isFocused;\n      var key = this.props.uniqueKey; // console.log('variables', JSON.stringify(variables));\n\n      var ButtonStyle = {\n        float: 'right',\n        display: variables.length > 0 ? 'inline-block' : 'none'\n      };\n      variables = variables.map(function (v) {\n        return _this4.renderVariable(v);\n      });\n      return React.createElement(Collapse, {\n        activeKey: isFocused ? key + 'p' : null,\n        bordered: false,\n        onChange: function onChange(event) {\n          return _this4.doNothing(event);\n        },\n        key: key + 'c',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        showArrow: false,\n        header: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(Input.TextArea, {\n          placeholder: 'Your question here',\n          autosize: true,\n          value: this.state.value,\n          onChange: function onChange(event) {\n            return _this4.handleChange(event);\n          },\n          key: key + 'i',\n          style: TextAreaStyle,\n          onFocus: function onFocus() {\n            return _this4.setState({\n              isFocused: variables.length > 0\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }), React.createElement(Button, {\n          size: \"large\",\n          style: ButtonStyle,\n          onClick: function onClick() {\n            return _this4.setState({\n              isFocused: !isFocused\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, isFocused ? 'Hide' : 'Show')),\n        key: key + 'p',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, variables)));\n    }\n  }]);\n\n  return QuestionInput;\n}(Component);\n\nexport default QuestionInput;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\QuestionInput.jsx"],"names":["React","Component","Button","Input","Form","Collapse","VariableForm","NameInput","ObjectInput","Panel","String","prototype","replaceAt","index","replacement","substr","length","replaceAll","search","target","replace","RegExp","TextAreaStyle","width","display","border","fontFamily","fontSize","QuestionInput","props","handleChange","event","value","selectionStart","selectionEnd","state","variables","isFocused","setState","parseVariableNames","handleUnitChange","unit","key","filter","k","handleStepChange","step","variable","handleMinChange","min","handleMaxChange","max","handleNameChange","name","nameValue","doNothing","console","log","variableRegex","matches","match","Set","counter","map","m","push","nameMatch","counterMatch","item","nameRegex","exec","uniqueKey","ButtonStyle","float","v","renderVariable"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,QAA9B,QAA8C,MAA9C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,KAAK,GAAGJ,QAAQ,CAACI,KAAvB;;AAEAC,MAAM,CAACC,SAAP,CAAiBC,SAAjB,GAA2B,UAASC,KAAT,EAAgBC,WAAhB,EAA6B;AACpD,SAAO,KAAKC,MAAL,CAAY,CAAZ,EAAeF,KAAK,GAAC,CAArB,IAA0BC,WAA1B,GAAuC,KAAKC,MAAL,CAAYF,KAAK,GAAGC,WAAW,CAACE,MAAhC,CAA9C;AACH,CAFD;;AAGAN,MAAM,CAACC,SAAP,CAAiBM,UAAjB,GAA8B,UAASC,MAAT,EAAiBJ,WAAjB,EAA8B;AACxD,MAAIK,MAAM,GAAG,IAAb;AACA,SAAOA,MAAM,CAACC,OAAP,CAAe,IAAIC,MAAJ,CAAWH,MAAX,EAAmB,GAAnB,CAAf,EAAwCJ,WAAxC,CAAP;AACH,CAHD;;AAKA,IAAMQ,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,KADa;AAEpBC,EAAAA,OAAO,EAAE,cAFW;AAGpBC,EAAAA,MAAM,EAAE,MAHY;AAIpBC,EAAAA,UAAU,EAAE,uBAJQ;AAKpBC,EAAAA,QAAQ,EAAE;AALU,CAAtB;;IAQMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;;AADgB,UASlBC,YATkB,GASH,UAAAC,KAAK,EAAI;AAAA,0BACwBA,KAAK,CAACZ,MAD9B;AAAA,UAChBa,KADgB,iBAChBA,KADgB;AAAA,UACTC,cADS,iBACTA,cADS;AAAA,UACOC,YADP,iBACOA,YADP;AAAA,wBAES,MAAKC,KAFd;AAAA,UAEhBC,SAFgB,eAEhBA,SAFgB;AAAA,UAELC,SAFK,eAELA,SAFK;;AAGtB,YAAKC,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAALA,KAAF;AAASK,QAAAA,SAAS,EAAED,SAAS,CAACpB,MAAV,GAAmB;AAAvC,OAAd;;AACA,YAAKuB,kBAAL,CAAwBP,KAAxB;AACD,KAdiB;;AAAA,UAiElBQ,gBAjEkB,GAiEC,UAACC,IAAD,EAAOC,GAAP,EAAe;AAChC,UAAIN,SAAS,GAAG,MAAKD,KAAL,CAAWC,SAAX,CAAqBO,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACF,GAAF,KAAUA,GAAd;AAAA,OAA7B,EAAgD,CAAhD,CAAhB;;AACAN,MAAAA,SAAS,CAACK,IAAV,GAAiBA,IAAjB;;AACA,YAAKH,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAEA,SAAS,IAAE,MAAKD,KAAL,CAAWC;AAAnC,OAAd;AACD,KArEiB;;AAAA,UAuElBS,gBAvEkB,GAuEC,UAACC,IAAD,EAAOJ,GAAP,EAAe;AAChC,UAAIK,QAAQ,GAAG,MAAKZ,KAAL,CAAWC,SAAX,CAAqBO,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACF,GAAF,KAAUA,GAAd;AAAA,OAA7B,EAAgD,CAAhD,CAAf;;AACAK,MAAAA,QAAQ,CAACD,IAAT,GAAgBA,IAAhB;;AACA,YAAKR,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAEW,QAAQ,IAAE,MAAKZ,KAAL,CAAWC;AAAlC,OAAd;AACD,KA3EiB;;AAAA,UA6ElBY,eA7EkB,GA6EA,UAACC,GAAD,EAAMP,GAAN,EAAc;AAC9B,UAAIK,QAAQ,GAAG,MAAKZ,KAAL,CAAWC,SAAX,CAAqBO,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACF,GAAF,KAAUA,GAAd;AAAA,OAA7B,EAAgD,CAAhD,CAAf;;AACAK,MAAAA,QAAQ,CAACE,GAAT,GAAeA,GAAf;;AACA,YAAKX,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAEW,QAAQ,IAAE,MAAKZ,KAAL,CAAWC;AAAlC,OAAd;AACD,KAjFiB;;AAAA,UAmFlBc,eAnFkB,GAmFA,UAACC,GAAD,EAAMT,GAAN,EAAc;AAC9B,UAAIK,QAAQ,GAAG,MAAKZ,KAAL,CAAWC,SAAX,CAAqBO,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACF,GAAF,KAAUA,GAAd;AAAA,OAA7B,EAAgD,CAAhD,CAAf;;AACAK,MAAAA,QAAQ,CAACI,GAAT,GAAeA,GAAf;;AACA,YAAKb,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAEW,QAAQ,IAAE,MAAKZ,KAAL,CAAWC;AAAlC,OAAd;AACD,KAvFiB;;AAAA,UAyFlBgB,gBAzFkB,GAyFC,UAACC,IAAD,EAAOX,GAAP,EAAe;AAChC,UAAIK,QAAQ,GAAG,MAAKZ,KAAL,CAAWC,SAAX,CAAqBO,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACF,GAAF,KAAUA,GAAd;AAAA,OAA7B,EAAgD,CAAhD,CAAf;;AACA,aAAOK,QAAQ,CAACE,GAAhB;AACA,aAAOF,QAAQ,CAACI,GAAhB;AACA,aAAOJ,QAAQ,CAACD,IAAhB;AACA,aAAOC,QAAQ,CAACN,IAAhB;AACAM,MAAAA,QAAQ,CAACO,SAAT,GAAqBD,IAAI,CAACpC,UAAL,CAAgB,WAAhB,EAA6B,EAA7B,CAArB;;AACA,YAAKqB,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAEW,QAAQ,IAAE,MAAKZ,KAAL,CAAWC;AAAlC,OAAd;AACD,KAjGiB;;AAAA,UAoIlBmB,SApIkB,GAoIN,UAAAxB,KAAK,EAAI;AACnByB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAtIiB;;AAEhB,UAAKtB,KAAL,GAAa;AACXH,MAAAA,KAAK,EAAE,EADI;AAEXI,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAFgB;AAOjB;;;;uCASkBL,K,EAAO;AAAA;;AACxB,UAAI0B,aAAa,GAAG,cAApB;AACA,UAAIC,OAAO,GAAG3B,KAAK,CAAC4B,KAAN,CAAYF,aAAZ,CAAd;;AAEA,UAAIC,OAAJ,EAAY;AACVA,QAAAA,OAAO,sBAAO,IAAIE,GAAJ,CAAQF,OAAR,CAAP,CAAP;AACA,YAAIG,OAAO,GAAG,CAAC,CAAf;AACAH,QAAAA,OAAO,GAAGA,OAAO,CAACI,GAAR,CAAY,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAAC/C,UAAF,CAAa,IAAb,EAAmB,EAAnB,EAAuBA,UAAvB,CAAkC,IAAlC,EAAwC,EAAxC,CAAJ;AAAA,SAAb,CAAV;AAEA,YAAImB,SAAS,GAAG,EAAhB;AAEAuB,QAAAA,OAAO,CAACI,GAAR,CAAY,UAAAC,CAAC,EAAI;AACfF,UAAAA,OAAO;;AACP,cAAIH,OAAO,CAAC3C,MAAR,KAAmB,MAAI,CAACmB,KAAL,CAAWC,SAAX,CAAqBpB,MAA5C,EAAmD;AACjD;AACA,gBAAI4C,KAAK,GAAG,MAAI,CAACzB,KAAL,CAAWC,SAAX,CAAqBO,MAArB,CAA4B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACS,IAAF,KAAWW,CAAf;AAAA,aAA7B,CAAZ;;AAEA,gBAAIJ,KAAK,CAAC5C,MAAN,GAAe,CAAnB,EAAqB;AACnB4C,cAAAA,KAAK,CAAC,CAAD,CAAL,CAASlB,GAAT,GAAeoB,OAAf,CADmB,CAEnB;;AACA1B,cAAAA,SAAS,CAAC6B,IAAV,CAAeL,KAAK,CAAC,CAAD,CAApB;AAED,aALD,MAKM;AACJ;AACAxB,cAAAA,SAAS,CAAC6B,IAAV,CAAe;AAAEvB,gBAAAA,GAAG,EAAEoB,OAAP;AAAgBT,gBAAAA,IAAI,EAAEW,CAAtB;AAAyBlB,gBAAAA,IAAI,EAAE,CAA/B;AAAkCG,gBAAAA,GAAG,EAAE,CAAvC;AAA0CE,gBAAAA,GAAG,EAAE,CAA/C;AAAkDV,gBAAAA,IAAI,EAAE;AAAxD,eAAf;AACD;AAEF,WAdD,MAcO;AACL;AACA,gBAAIyB,SAAS,GAAG,MAAI,CAAC/B,KAAL,CAAWC,SAAX,CAAqBO,MAArB,CAA4B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACS,IAAF,KAAWW,CAAf;AAAA,aAA7B,CAAhB;;AACA,gBAAIG,YAAY,GAAG,MAAI,CAAChC,KAAL,CAAWC,SAAX,CAAqBO,MAArB,CAA4B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACF,GAAF,KAAUoB,OAAd;AAAA,aAA7B,CAAnB;;AAEA,gBAAII,SAAS,CAAClD,MAAV,GAAmB,CAAvB,EAAyB;AACvB;AACAoB,cAAAA,SAAS,CAAC6B,IAAV,CAAeC,SAAS,CAAC,CAAD,CAAxB;AAED,aAJD,MAIO,IAAIC,YAAY,CAACnD,MAAb,GAAsB,CAA1B,EAA4B;AACjC;AACAmD,cAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBd,IAAhB,GAAuBW,CAAvB;AACA5B,cAAAA,SAAS,CAAC6B,IAAV,CAAeE,YAAY,CAAC,CAAD,CAA3B;AACD;AACF;AACF,SA/BD;AAgCA,aAAK7B,QAAL,CAAc;AAAEF,UAAAA,SAAS,EAATA;AAAF,SAAd;AACD,OAxCD,MAwCO;AACL,aAAKE,QAAL,CAAc;AAAEF,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF;;;mCAoCcgC,I,EAAM;AAAA;;AAAA,UACbf,IADa,GACCe,IADD,CACbf,IADa;AAAA,UACPX,GADO,GACC0B,IADD,CACP1B,GADO;AAGnB,UAAI2B,SAAS,GAAG,kBAAhB;AACA,UAAIT,KAAK,GAAGS,SAAS,CAACC,IAAV,CAAejB,IAAf,CAAZ;;AAEA,UAAIO,KAAJ,EAAU;AACR,eACE,oBAAC,SAAD;AACE,UAAA,GAAG,EAAGlB,GADR;AAEE,UAAA,MAAM,EAAEkB,KAAK,CAAC,CAAD,CAFf;AAGE,UAAA,IAAI,EAAGP,IAHT;AAIE,UAAA,YAAY,EAAG,sBAACA,IAAD;AAAA,mBAAU,MAAI,CAACD,gBAAL,CAAsBC,IAAtB,EAA4BX,GAA5B,CAAV;AAAA,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAdkB,UAgBbO,GAhBa,GAgBYmB,IAhBZ,CAgBbnB,GAhBa;AAAA,UAgBRE,GAhBQ,GAgBYiB,IAhBZ,CAgBRjB,GAhBQ;AAAA,UAgBHL,IAhBG,GAgBYsB,IAhBZ,CAgBHtB,IAhBG;AAAA,UAgBGL,IAhBH,GAgBY2B,IAhBZ,CAgBG3B,IAhBH;AAiBnB,aACE,oBAAC,YAAD;AACE,QAAA,YAAY,EAAE,sBAACA,IAAD,EAAOC,GAAP;AAAA,iBAAe,MAAI,CAACF,gBAAL,CAAsBC,IAAtB,EAA4BC,GAA5B,CAAf;AAAA,SADhB;AAEE,QAAA,YAAY,EAAE,sBAACI,IAAD,EAAOJ,GAAP;AAAA,iBAAe,MAAI,CAACG,gBAAL,CAAsBC,IAAtB,EAA4BJ,GAA5B,CAAf;AAAA,SAFhB;AAGE,QAAA,WAAW,EAAE,qBAACO,GAAD,EAAMP,GAAN;AAAA,iBAAc,MAAI,CAACM,eAAL,CAAqBC,GAArB,EAA0BP,GAA1B,CAAd;AAAA,SAHf;AAIE,QAAA,WAAW,EAAE,qBAACS,GAAD,EAAMT,GAAN;AAAA,iBAAc,MAAI,CAACQ,eAAL,CAAqBC,GAArB,EAA0BT,GAA1B,CAAd;AAAA,SAJf;AAKE,QAAA,SAAS,EAAGA,GALd;AAME,QAAA,IAAI,EAAGD,IANT;AAOE,QAAA,GAAG,EAAGQ,GAPR;AAQE,QAAA,GAAG,EAAGE,GARR;AASE,QAAA,IAAI,EAAGL,IATT;AAUE,QAAA,IAAI,EAAGO,IAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAcD;;;mCAMc;AAAA,UACPjB,SADO,GACO,KAAKD,KADZ,CACPC,SADO;AAEb,aAAOA,SAAP;AACD;;;6BAEQ;AAAA;;AAAA,yBACwB,KAAKD,KAD7B;AAAA,UACDC,SADC,gBACDA,SADC;AAAA,UACUC,SADV,gBACUA,SADV;AAEP,UAAIK,GAAG,GAAG,KAAKb,KAAL,CAAW0C,SAArB,CAFO,CAGP;;AACA,UAAIC,WAAW,GAAG;AAChBC,QAAAA,KAAK,EAAE,OADS;AAEhBjD,QAAAA,OAAO,EAAEY,SAAS,CAACpB,MAAV,GAAmB,CAAnB,GAAuB,cAAvB,GAAwC;AAFjC,OAAlB;AAKAoB,MAAAA,SAAS,GAAGA,SAAS,CAAC2B,GAAV,CAAc,UAAAW,CAAC;AAAA,eAAI,MAAI,CAACC,cAAL,CAAoBD,CAApB,CAAJ;AAAA,OAAf,CAAZ;AACA,aACE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAErC,SAAS,GAAGK,GAAG,GAAC,GAAP,GAAa,IAA3C;AAAiD,QAAA,QAAQ,EAAE,KAA3D;AAAkE,QAAA,QAAQ,EAAE,kBAAAX,KAAK;AAAA,iBAAI,MAAI,CAACwB,SAAL,CAAexB,KAAf,CAAJ;AAAA,SAAjF;AAA6G,QAAA,GAAG,EAAGW,GAAG,GAAC,GAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAG,KADd;AAEE,QAAA,MAAM,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,QAAP;AACI,UAAA,WAAW,EAAG,oBADlB;AAEI,UAAA,QAAQ,EAAG,IAFf;AAGI,UAAA,KAAK,EAAG,KAAKP,KAAL,CAAWH,KAHvB;AAII,UAAA,QAAQ,EAAG,kBAAAD,KAAK;AAAA,mBAAI,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAJ;AAAA,WAJpB;AAKI,UAAA,GAAG,EAAGW,GAAG,GAAC,GALd;AAMI,UAAA,KAAK,EAAGpB,aANZ;AAOI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACgB,QAAL,CAAc;AAAED,cAAAA,SAAS,EAAED,SAAS,CAACpB,MAAV,GAAmB;AAAhC,aAAd,CAAN;AAAA,WAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAUE,oBAAC,MAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,EAAGwD,WAFV;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAClC,QAAL,CAAc;AAAED,cAAAA,SAAS,EAAE,CAACA;AAAd,aAAd,CAAN;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIIA,SAAS,GAAG,MAAH,GAAY,MAJzB,CAVF,CAHJ;AAqBE,QAAA,GAAG,EAAGK,GAAG,GAAC,GArBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAsBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,SADH,CAtBF,CADF,CADF;AA+BD;;;;EAvLyBnC,S;;AA0L5B,eAAe2B,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Input, Form, Collapse } from 'antd';\r\nimport VariableForm from './VariableForm'\r\nimport NameInput from './NameInput'\r\nimport ObjectInput from './ObjectInput'\r\n\r\nconst Panel = Collapse.Panel;\r\n\r\nString.prototype.replaceAt=function(index, replacement) {\r\n    return this.substr(0, index+1) + replacement+ this.substr(index + replacement.length);\r\n}\r\nString.prototype.replaceAll = function(search, replacement) {\r\n    var target = this;\r\n    return target.replace(new RegExp(search, 'g'), replacement);\r\n};\r\n\r\nconst TextAreaStyle = {\r\n  width: '80%',\r\n  display: 'inline-block',\r\n  border: 'none',\r\n  fontFamily: \"'Sarabun', sans-serif\",\r\n  fontSize: '2em',\r\n}\r\n\r\nclass QuestionInput extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      variables: [],\r\n      isFocused: false,\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    let { value, selectionStart, selectionEnd } = event.target;\r\n    let { variables, isFocused } = this.state;\r\n    this.setState({ value, isFocused: variables.length > 0 });\r\n    this.parseVariableNames(value);\r\n  }\r\n\r\n  parseVariableNames(value) {\r\n    let variableRegex = /\\[[^\\[]*?\\]/g;\r\n    let matches = value.match(variableRegex);\r\n\r\n    if (matches){\r\n      matches = [...new Set(matches)]\r\n      let counter = -1;\r\n      matches = matches.map(m => m.replaceAll(/\\[/, \"\").replaceAll(/\\]/, \"\"));\r\n\r\n      let variables = []\r\n\r\n      matches.map(m => {\r\n        counter++;\r\n        if (matches.length !== this.state.variables.length){\r\n          // new variable created\r\n          let match = this.state.variables.filter(k => k.name === m)\r\n\r\n          if (match.length > 0){\r\n            match[0].key = counter;\r\n            // variable already exists, so we just return it\r\n            variables.push(match[0])\r\n\r\n          } else{\r\n            // new variable, so we must make a new blank version\r\n            variables.push({ key: counter, name: m, step: 1, min: 0, max: 0, unit: [] })\r\n          }\r\n\r\n        } else {\r\n          // unrelated update or a rename\r\n          let nameMatch = this.state.variables.filter(k => k.name === m);\r\n          let counterMatch = this.state.variables.filter(k => k.key === counter);\r\n\r\n          if (nameMatch.length > 0){\r\n            // name was found, was not renamed\r\n            variables.push(nameMatch[0])\r\n\r\n          } else if (counterMatch.length > 0){\r\n            // name not found, so it must've been renamed\r\n            counterMatch[0].name = m;\r\n            variables.push(counterMatch[0])\r\n          }\r\n        }\r\n      });\r\n      this.setState({ variables })\r\n    } else {\r\n      this.setState({ variables: [] })\r\n    }\r\n  }\r\n\r\n  handleUnitChange = (unit, key) => {\r\n    let variables = this.state.variables.filter(k => k.key === key)[0];\r\n    variables.unit = unit;\r\n    this.setState({ variables: variables&&this.state.variables })\r\n  }\r\n\r\n  handleStepChange = (step, key) => {\r\n    let variable = this.state.variables.filter(k => k.key === key)[0];\r\n    variable.step = step;\r\n    this.setState({ variables: variable&&this.state.variables })\r\n  }\r\n\r\n  handleMinChange = (min, key) => {\r\n    let variable = this.state.variables.filter(k => k.key === key)[0];\r\n    variable.min = min;\r\n    this.setState({ variables: variable&&this.state.variables })\r\n  }\r\n\r\n  handleMaxChange = (max, key) => {\r\n    let variable = this.state.variables.filter(k => k.key === key)[0];\r\n    variable.max = max;\r\n    this.setState({ variables: variable&&this.state.variables })\r\n  }\r\n\r\n  handleNameChange = (name, key) => {\r\n    let variable = this.state.variables.filter(k => k.key === key)[0];\r\n    delete variable.min;\r\n    delete variable.max;\r\n    delete variable.step;\r\n    delete variable.unit;\r\n    variable.nameValue = name.replaceAll('undefined', '')\r\n    this.setState({ variables: variable&&this.state.variables })\r\n  }\r\n\r\n  renderVariable(item) {\r\n    let { name, key } = item;\r\n\r\n    let nameRegex = /^name\\s*(\\d*)$/gi;\r\n    let match = nameRegex.exec(name);\r\n\r\n    if (match){\r\n      return (\r\n        <NameInput\r\n          key={ key }\r\n          number={match[1]}\r\n          name={ name }\r\n          onNameChange={ (name) => this.handleNameChange(name, key) }\r\n        />)\r\n    }\r\n\r\n    let { min, max, step, unit } = item;\r\n    return (\r\n      <VariableForm\r\n        onUnitChange={(unit, key) => this.handleUnitChange(unit, key) }\r\n        onStepChange={(step, key) => this.handleStepChange(step, key) }\r\n        onMinChange={(min, key) => this.handleMinChange(min, key) }\r\n        onMaxChange={(max, key) => this.handleMaxChange(max, key) }\r\n        uniqueKey={ key }\r\n        unit={ unit }\r\n        min={ min }\r\n        max={ max }\r\n        step={ step }\r\n        name={ name }\r\n      />\r\n    )\r\n  }\r\n\r\n  doNothing = event => {\r\n    console.log('nothing')\r\n  }\r\n\r\n  exportAsJSON() {\r\n    let { variables } = this.state;\r\n    return variables;\r\n  }\r\n\r\n  render() {\r\n    let { variables, isFocused } = this.state;\r\n    let key = this.props.uniqueKey;\r\n    // console.log('variables', JSON.stringify(variables));\r\n    let ButtonStyle = {\r\n      float: 'right',\r\n      display: variables.length > 0 ? 'inline-block' : 'none',\r\n    }\r\n\r\n    variables = variables.map(v => this.renderVariable(v));\r\n    return (\r\n      <Collapse activeKey={isFocused ? key+'p' : null} bordered={false} onChange={event => this.doNothing(event) } key={ key+'c' }>\r\n        <Panel\r\n          showArrow={ false }\r\n          header={\r\n            <div>\r\n              <Input.TextArea\r\n                  placeholder={ 'Your question here' }\r\n                  autosize={ true }\r\n                  value={ this.state.value }\r\n                  onChange={ event => this.handleChange(event) }\r\n                  key={ key+'i' }\r\n                  style={ TextAreaStyle }\r\n                  onFocus={() => this.setState({ isFocused: variables.length > 0 }) }\r\n                />\r\n              <Button\r\n                size='large'\r\n                style={ ButtonStyle }\r\n                onClick={() => this.setState({ isFocused: !isFocused }) }>\r\n                { isFocused ? 'Hide' : 'Show' }\r\n              </Button>\r\n              </div>}\r\n\r\n          key={ key+'p' }>\r\n          <Form>\r\n            {variables}\r\n          </Form>\r\n        </Panel>\r\n      </Collapse>\r\n\r\n    )\r\n  };\r\n}\r\n\r\nexport default QuestionInput;\r\n"]},"metadata":{},"sourceType":"module"}