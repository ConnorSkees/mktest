{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\VariablePicker.jsx\";\nimport React, { Component } from 'react';\nimport { Input, InputNumber, Tooltip, Divider, Form, Switch, Cascader } from 'antd';\n\nfunction convertToDict(arr) {\n  arr = arr.map(function (l) {\n    return {\n      value: l,\n      label: l\n    };\n  });\n  return arr;\n}\n\nvar englishLetters = convertToDict('ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split(''));\nvar greekLetters = convertToDict('ΑαΒβΓγΔδΕεΖζΗηΘθΙιΚκΛλΜμΝνΞξΟοΠπΡρΣσΤτΥυΦφΧχΨψΩω'.split(''));\nvar siUnits = convertToDict(['meter', 'gram', 'second', 'ampere', 'kelvin', 'mole', 'candela'].sort());\nvar derivedUnits = convertToDict(['radian', 'newton', 'pascal', 'joule', 'watt', 'coulomb', 'volt', 'farad', 'ohm', 'tesla', 'celsius'].sort());\nvar metricLength = convertToDict(['meter', 'gram', 'second', 'ampere', 'kelvin', 'mole', 'candela'].sort());\nvar options = [{\n  value: 'englishLetters',\n  label: 'English Letters',\n  children: _toConsumableArray(englishLetters)\n}, {\n  value: 'siUnits',\n  label: 'SI Units',\n  children: _toConsumableArray(siUnits)\n}, {\n  value: 'derivedUnits',\n  label: 'Derived SI Units',\n  children: _toConsumableArray(derivedUnits)\n}, {\n  value: 'greekLetters',\n  label: 'Greek Letters',\n  children: _toConsumableArray(greekLetters)\n}, {\n  value: 'metric',\n  label: 'Metric Units',\n  children: [{\n    value: 'length',\n    label: 'Length',\n    children: [{\n      value: 'meter',\n      label: 'Meter'\n    }]\n  }]\n}];\n\nvar VariablePicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VariablePicker, _Component);\n\n  function VariablePicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VariablePicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VariablePicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(VariablePicker, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'variable-label',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Unit:\"), React.createElement(Cascader, {\n        size: 'small',\n        options: options,\n        placeholder: \"Please select\",\n        style: {\n          width: '50%',\n          marginTop: '5%',\n          marginLeft: '3%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: 'variable-label',\n        style: {\n          width: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Metric:\"), React.createElement(Switch, {\n        size: \"small\",\n        defaultChecked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return VariablePicker;\n}(Component);\n\nexport default VariablePicker;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\VariablePicker.jsx"],"names":["React","Component","Input","InputNumber","Tooltip","Divider","Form","Switch","Cascader","convertToDict","arr","map","l","value","label","englishLetters","split","greekLetters","siUnits","sort","derivedUnits","metricLength","options","children","VariablePicker","state","width","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input, InputNumber, Tooltip, Divider, Form, Switch, Cascader } from 'antd';\r\n\r\nfunction convertToDict(arr){\r\n  arr = arr.map(l => {\r\n        return ({\r\n          value: l,\r\n          label: l,\r\n        })\r\n      });\r\n\r\n  return arr\r\n}\r\n\r\nconst englishLetters = convertToDict('ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split(''));\r\nconst greekLetters = convertToDict('ΑαΒβΓγΔδΕεΖζΗηΘθΙιΚκΛλΜμΝνΞξΟοΠπΡρΣσΤτΥυΦφΧχΨψΩω'.split(''));\r\n\r\nconst siUnits = convertToDict(['meter', 'gram', 'second', 'ampere', 'kelvin', 'mole', 'candela'].sort());\r\nconst derivedUnits = convertToDict(['radian', 'newton', 'pascal', 'joule',\r\n                                    'watt', 'coulomb', 'volt', 'farad', 'ohm',\r\n                                    'tesla', 'celsius'].sort());\r\n\r\nconst metricLength = convertToDict(['meter', 'gram', 'second', 'ampere', 'kelvin', 'mole', 'candela'].sort());\r\n\r\nconst options = [\r\n  {\r\n    value: 'englishLetters',\r\n    label: 'English Letters',\r\n    children: [\r\n      ...englishLetters\r\n    ],\r\n  },\r\n  {\r\n    value: 'siUnits',\r\n    label: 'SI Units',\r\n    children: [\r\n      ...siUnits\r\n    ],\r\n  },\r\n  {\r\n    value: 'derivedUnits',\r\n    label: 'Derived SI Units',\r\n    children: [\r\n      ...derivedUnits\r\n    ],\r\n  },\r\n  {\r\n    value: 'greekLetters',\r\n    label: 'Greek Letters',\r\n    children: [\r\n      ...greekLetters\r\n    ],\r\n  },\r\n  {\r\n    value: 'metric',\r\n    label: 'Metric Units',\r\n    children: [\r\n      {\r\n        value: 'length',\r\n        label: 'Length',\r\n        children: [\r\n          {\r\n            value: 'meter',\r\n            label: 'Meter',\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n  },\r\n];\r\n\r\nclass VariablePicker extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={ 'variable-label' } >Unit:</div>\r\n        <Cascader\r\n          size={'small'}\r\n          options={options}\r\n          placeholder=\"Please select\"\r\n          style={{ width: '50%', marginTop: '5%', marginLeft: '3%' }} />\r\n        <br />\r\n        <div className={ 'variable-label' } style={{ width: '50px' }}>Metric:</div>\r\n        <Switch size=\"small\" defaultChecked />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default VariablePicker;\r\n"]},"metadata":{},"sourceType":"module"}