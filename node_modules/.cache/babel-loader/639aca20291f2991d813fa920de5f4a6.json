{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\VariablePicker.jsx\";\nimport React, { Component } from 'react';\nimport { Input, InputNumber, Tooltip, Divider, Form, Switch, Cascader } from 'antd';\n\nfunction toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\nfunction convertToDict(arr) {\n  arr = arr.map(function (l) {\n    return {\n      value: l,\n      label: toTitleCase(l),\n      isParent: false\n    };\n  });\n  return arr;\n}\n\nvar englishLetters = convertToDict('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split(''));\nvar greekLetters = convertToDict('ΑαΒβΓγΔδΕεΖζΗηΘθΙιΚκΛλΜμΝνΞξΟοΠπΡρΣσΤτΥυΦφΧχΨψΩω'.split(''));\nvar metricUnits = convertToDict(['meter', 'gram', 'second', 'ampere', 'kelvin', 'mole', 'candela', 'liter'].sort());\nvar derivedUnits = convertToDict(['radian', 'newton', 'pascal', 'joule', 'watt', 'coulomb', 'volt', 'farad', 'ohm', 'tesla', 'celsius', 'hour', 'minute'].sort());\nvar customaryLength = convertToDict(['inch', 'foot', 'yard', 'mile'].sort());\nvar customaryArea = convertToDict(['acre'].sort());\nvar customaryMass = convertToDict(['ounce', 'pound', 'ton'].sort());\nvar customaryVolume = convertToDict(['teaspoon', 'tablespoon', 'fluid ounce', 'cup', 'pint', 'quart', 'gallon'].sort());\nvar options = [{\n  value: 'metricUnits',\n  label: 'Metric Units',\n  isParent: true,\n  children: _toConsumableArray(metricUnits)\n}, {\n  value: 'derivedUnits',\n  label: 'Derived SI Units',\n  isParent: true,\n  children: _toConsumableArray(derivedUnits)\n}, {\n  value: 'customaryUnits',\n  label: 'Customary Units',\n  isParent: true,\n  children: [{\n    value: 'customaryArea',\n    label: 'Area',\n    isParent: true,\n    children: _toConsumableArray(customaryArea)\n  }, {\n    value: 'customaryMass',\n    label: 'Mass',\n    isParent: true,\n    children: _toConsumableArray(customaryMass)\n  }, {\n    value: 'customaryLength',\n    label: 'Length',\n    isParent: true,\n    children: _toConsumableArray(customaryLength)\n  }, {\n    value: 'customaryVolume',\n    label: 'Volume',\n    isParent: true,\n    children: _toConsumableArray(customaryVolume)\n  }]\n}];\n\nfunction handleAreaClick(e, label, option) {\n  e.stopPropagation();\n  console.log('clicked', label, option);\n}\n\nvar displayRender = function displayRender(labels, selectedOptions) {\n  return labels.map(function (label, i) {\n    var option = selectedOptions[i];\n    console.log(option.value);\n\n    if (!option.isParent) {\n      return React.createElement(\"span\", {\n        key: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, label);\n    }\n  });\n};\n\nvar VariablePicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VariablePicker, _Component);\n\n  function VariablePicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VariablePicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VariablePicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(VariablePicker, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'variable-label',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Unit:\"), React.createElement(Cascader, {\n        size: 'small',\n        options: options,\n        placeholder: \"Please select\",\n        displayRender: displayRender,\n        style: {\n          width: '50%',\n          marginTop: '5%',\n          marginLeft: '3%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: 'variable-label',\n        style: {\n          width: '135px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Metric Prefixes:\"), React.createElement(Switch, {\n        size: \"small\",\n        defaultChecked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return VariablePicker;\n}(Component);\n\nexport default VariablePicker;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\VariablePicker.jsx"],"names":["React","Component","Input","InputNumber","Tooltip","Divider","Form","Switch","Cascader","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","convertToDict","arr","map","l","value","label","isParent","englishLetters","split","greekLetters","metricUnits","sort","derivedUnits","customaryLength","customaryArea","customaryMass","customaryVolume","options","children","handleAreaClick","e","option","stopPropagation","console","log","displayRender","labels","selectedOptions","i","VariablePicker","state","width","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input, InputNumber, Tooltip, Divider, Form, Switch, Cascader } from 'antd';\r\n\r\nfunction toTitleCase(str) {\r\n        return str.replace(\r\n            /\\w\\S*/g,\r\n            function(txt) {\r\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n            }\r\n        );\r\n    }\r\n\r\nfunction convertToDict(arr){\r\n  arr = arr.map(l => {\r\n        return ({\r\n          value: l,\r\n          label: toTitleCase(l),\r\n          isParent: false,\r\n        })\r\n      });\r\n  return arr\r\n}\r\n\r\nconst englishLetters = convertToDict('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split(''));\r\nconst greekLetters = convertToDict('ΑαΒβΓγΔδΕεΖζΗηΘθΙιΚκΛλΜμΝνΞξΟοΠπΡρΣσΤτΥυΦφΧχΨψΩω'.split(''));\r\n\r\nconst metricUnits = convertToDict(['meter', 'gram', 'second', 'ampere', 'kelvin', 'mole', 'candela', 'liter'].sort());\r\nconst derivedUnits = convertToDict(['radian', 'newton', 'pascal', 'joule',\r\n                                    'watt', 'coulomb', 'volt', 'farad', 'ohm',\r\n                                    'tesla', 'celsius', 'hour', 'minute'].sort());\r\n\r\nconst customaryLength = convertToDict(['inch', 'foot', 'yard', 'mile'].sort())\r\nconst customaryArea = convertToDict(['acre'].sort())\r\nconst customaryMass = convertToDict(['ounce', 'pound', 'ton',].sort())\r\nconst customaryVolume = convertToDict(['teaspoon', 'tablespoon', 'fluid ounce',\r\n                                       'cup', 'pint', 'quart', 'gallon', ].sort())\r\n\r\nconst options = [\r\n  {\r\n    value: 'metricUnits',\r\n    label: 'Metric Units',\r\n    isParent: true,\r\n    children: [\r\n      ...metricUnits\r\n    ],\r\n  },\r\n  {\r\n    value: 'derivedUnits',\r\n    label: 'Derived SI Units',\r\n    isParent: true,\r\n    children: [\r\n      ...derivedUnits\r\n    ],\r\n  },\r\n  {\r\n    value: 'customaryUnits',\r\n    label: 'Customary Units',\r\n    isParent: true,\r\n    children: [\r\n      {\r\n        value: 'customaryArea',\r\n        label: 'Area',\r\n        isParent: true,\r\n        children: [\r\n          ...customaryArea\r\n        ],\r\n      },\r\n      {\r\n        value: 'customaryMass',\r\n        label: 'Mass',\r\n        isParent: true,\r\n        children: [\r\n          ...customaryMass\r\n        ],\r\n      },\r\n      {\r\n        value: 'customaryLength',\r\n        label: 'Length',\r\n        isParent: true,\r\n        children: [\r\n          ...customaryLength\r\n        ],\r\n      },\r\n      {\r\n        value: 'customaryVolume',\r\n        label: 'Volume',\r\n        isParent: true,\r\n        children: [\r\n          ...customaryVolume\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction handleAreaClick(e, label, option) {\r\n  e.stopPropagation();\r\n  console.log('clicked', label, option);\r\n}\r\n\r\nconst displayRender = (labels, selectedOptions) => labels.map((label, i) => {\r\n  const option = selectedOptions[i];\r\n  console.log(option.value)\r\n  if (!option.isParent){\r\n  return <span key={option.value}>{label}</span>;}\r\n});\r\n\r\nclass VariablePicker extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={ 'variable-label' } >Unit:</div>\r\n        <Cascader\r\n          size={'small'}\r\n          options={options}\r\n          placeholder=\"Please select\"\r\n          displayRender={displayRender}\r\n          style={{ width: '50%', marginTop: '5%', marginLeft: '3%' }} />\r\n        <br />\r\n        <div className={ 'variable-label' } style={{ width: '135px' }}>Metric Prefixes:</div>\r\n        <Switch size=\"small\" defaultChecked />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default VariablePicker;\r\n"]},"metadata":{},"sourceType":"module"}