{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\QuestionInput.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Input, Form, Collapse, Icon } from 'antd';\nimport VariableForm from './VariableForm';\nimport NameInput from './NameInput';\nimport ObjectInput from './ObjectInput';\nimport Disappear from './Disappear';\nvar Panel = Collapse.Panel;\n\nString.prototype.replaceAt = function (index, replacement) {\n  return this.substr(0, index + 1) + replacement + this.substr(index + replacement.length);\n};\n\nString.prototype.replaceAll = function (search, replacement) {\n  var target = this;\n  return target.replace(new RegExp(search, 'g'), replacement);\n};\n\nvar TextAreaStyle = {\n  width: '80%',\n  display: 'inline-block',\n  border: 'none',\n  fontFamily: \"'Sarabun', sans-serif\",\n  fontSize: '2em'\n};\n\nvar QuestionInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionInput, _Component);\n\n  function QuestionInput(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionInput).call(this, props));\n\n    _this.handleChange = function (event) {\n      var value = event.target.value;\n\n      _this.setState({\n        value: value\n      });\n\n      _this.parseVariableNames(value);\n    };\n\n    _this.handleUnitChange = function (unit, key) {\n      var variables = _this.state.variables.filter(function (k) {\n        return k.key === key;\n      })[0];\n\n      variables.unit = unit;\n\n      _this.setState({\n        variables: variables && _this.state.variables\n      });\n    };\n\n    _this.handleStepChange = function (step, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key === key;\n      })[0];\n\n      variable.step = step;\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.handleMinChange = function (min, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key === key;\n      })[0];\n\n      variable.min = min;\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.handleMaxChange = function (max, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key === key;\n      })[0];\n\n      variable.max = max;\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.handleNameChange = function (name, key) {\n      var variable = _this.state.variables.filter(function (k) {\n        return k.key === key;\n      })[0];\n\n      delete variable.min;\n      delete variable.max;\n      delete variable.step;\n      delete variable.unit;\n      variable.nameValue = name.replaceAll('undefined', '');\n\n      _this.setState({\n        variables: variable && _this.state.variables\n      });\n    };\n\n    _this.doNothing = function (event) {// console.log('nothing');\n    };\n\n    _this.toggle = function (e) {\n      return _this.setState(function (state) {\n        return {\n          isVisible: !state.isVisible\n        };\n      });\n    };\n\n    _this.handleDelete = function (e) {\n      _this.toggle();\n\n      _this.props.onDelete();\n    };\n\n    _this.state = {\n      value: '',\n      variables: [],\n      isFocused: false,\n      isVisible: true,\n      height: 100\n    };\n    return _this;\n  }\n\n  _createClass(QuestionInput, [{\n    key: \"parseVariableNames\",\n    value: function parseVariableNames(value) {\n      var _this2 = this;\n\n      var variableRegex = /\\[[^\\[]*?\\]/g;\n      var matches = value.match(variableRegex);\n\n      if (matches) {\n        matches = _toConsumableArray(new Set(matches));\n        var counter = -1;\n        matches = matches.map(function (m) {\n          return m.replaceAll(/\\[/, \"\").replaceAll(/\\]/, \"\");\n        });\n        var variables = [];\n        matches.map(function (m) {\n          counter++;\n\n          if (matches.length !== _this2.state.variables.length) {\n            // new variable created\n            var match = _this2.state.variables.filter(function (k) {\n              return k.name === m;\n            });\n\n            if (match.length > 0) {\n              match[0].key = counter; // variable already exists, so we just return it\n\n              variables.push(match[0]);\n            } else {\n              // new variable, so we must make a new blank version\n              variables.push({\n                key: counter,\n                name: m,\n                step: 1,\n                min: 0,\n                max: 0,\n                unit: []\n              });\n            }\n          } else {\n            // unrelated update or a rename\n            var nameMatch = _this2.state.variables.filter(function (k) {\n              return k.name === m;\n            });\n\n            var counterMatch = _this2.state.variables.filter(function (k) {\n              return k.key === counter;\n            });\n\n            if (nameMatch.length > 0) {\n              // name was found, was not renamed\n              variables.push(nameMatch[0]);\n            } else if (counterMatch.length > 0) {\n              // name not found, so it must've been renamed\n              counterMatch[0].name = m;\n              variables.push(counterMatch[0]);\n            }\n          }\n        });\n        this.setState({\n          variables: variables\n        });\n      } else {\n        this.setState({\n          variables: []\n        });\n      }\n    }\n  }, {\n    key: \"renderVariable\",\n    value: function renderVariable(item) {\n      var _this3 = this;\n\n      var name = item.name,\n          key = item.key;\n      var nameRegex = /^name\\s*(\\d*)$/gi;\n      var match = nameRegex.exec(name);\n\n      if (match) {\n        return React.createElement(NameInput, {\n          key: key,\n          number: match[1],\n          name: name,\n          onNameChange: function onNameChange(name) {\n            return _this3.handleNameChange(name, key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        });\n      }\n\n      var min = item.min,\n          max = item.max,\n          step = item.step,\n          unit = item.unit;\n      return React.createElement(VariableForm, {\n        onUnitChange: function onUnitChange(unit, key) {\n          return _this3.handleUnitChange(unit, key);\n        },\n        onStepChange: function onStepChange(step, key) {\n          return _this3.handleStepChange(step, key);\n        },\n        onMinChange: function onMinChange(min, key) {\n          return _this3.handleMinChange(min, key);\n        },\n        onMaxChange: function onMaxChange(max, key) {\n          return _this3.handleMaxChange(max, key);\n        },\n        uniqueKey: key,\n        unit: unit,\n        min: min,\n        max: max,\n        step: step,\n        name: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"exportAsJSON\",\n    value: function exportAsJSON() {\n      var variables = this.state.variables;\n      return variables;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          variables = _this$state.variables,\n          isFocused = _this$state.isFocused,\n          isVisible = _this$state.isVisible;\n      var key = this.props.uniqueKey; // console.log('variables', JSON.stringify(variables));\n\n      var ButtonStyle = {\n        float: 'right',\n        display: variables.length > 0 ? 'inline-block' : 'none'\n      };\n      variables = variables.map(function (v) {\n        return _this4.renderVariable(v);\n      });\n      return React.createElement(Disappear, {\n        isVisible: isVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Collapse, {\n        activeKey: isFocused ? key + 'p' : null,\n        bordered: false,\n        onChange: function onChange(event) {\n          return _this4.doNothing(event);\n        },\n        key: key + 'c',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Panel, {\n        showArrow: false,\n        header: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(Input.TextArea, {\n          placeholder: 'Your question here',\n          autosize: true,\n          value: this.state.value,\n          onChange: function onChange(event) {\n            return _this4.handleChange(event);\n          },\n          key: key + 'i',\n          style: TextAreaStyle,\n          onFocus: function onFocus() {\n            return _this4.setState({\n              isFocused: variables.length > 0\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }), React.createElement(Button, {\n          size: \"large\",\n          style: ButtonStyle,\n          onClick: function onClick() {\n            return _this4.setState({\n              isFocused: !isFocused\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, isFocused ? 'Hide' : 'Show'), React.createElement(Button, {\n          size: \"large\",\n          type: \"danger\",\n          style: _objectSpread({}, ButtonStyle, {\n            display: 'inline-block'\n          }),\n          onClick: this.handleDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"minus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }))),\n        key: key + 'p',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, variables))));\n    }\n  }]);\n\n  return QuestionInput;\n}(Component);\n\nexport default QuestionInput;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\QuestionInput.jsx"],"names":["React","Component","Button","Input","Form","Collapse","Icon","VariableForm","NameInput","ObjectInput","Disappear","Panel","String","prototype","replaceAt","index","replacement","substr","length","replaceAll","search","target","replace","RegExp","TextAreaStyle","width","display","border","fontFamily","fontSize","QuestionInput","props","handleChange","event","value","setState","parseVariableNames","handleUnitChange","unit","key","variables","state","filter","k","handleStepChange","step","variable","handleMinChange","min","handleMaxChange","max","handleNameChange","name","nameValue","doNothing","toggle","e","isVisible","handleDelete","onDelete","isFocused","height","variableRegex","matches","match","Set","counter","map","m","push","nameMatch","counterMatch","item","nameRegex","exec","uniqueKey","ButtonStyle","float","v","renderVariable"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,IAAxC,QAAoD,MAApD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAMC,KAAK,GAAGN,QAAQ,CAACM,KAAvB;;AAEAC,MAAM,CAACC,SAAP,CAAiBC,SAAjB,GAA2B,UAASC,KAAT,EAAgBC,WAAhB,EAA6B;AACpD,SAAO,KAAKC,MAAL,CAAY,CAAZ,EAAeF,KAAK,GAAC,CAArB,IAA0BC,WAA1B,GAAuC,KAAKC,MAAL,CAAYF,KAAK,GAAGC,WAAW,CAACE,MAAhC,CAA9C;AACH,CAFD;;AAGAN,MAAM,CAACC,SAAP,CAAiBM,UAAjB,GAA8B,UAASC,MAAT,EAAiBJ,WAAjB,EAA8B;AACxD,MAAIK,MAAM,GAAG,IAAb;AACA,SAAOA,MAAM,CAACC,OAAP,CAAe,IAAIC,MAAJ,CAAWH,MAAX,EAAmB,GAAnB,CAAf,EAAwCJ,WAAxC,CAAP;AACH,CAHD;;AAKA,IAAMQ,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,KADa;AAEpBC,EAAAA,OAAO,EAAE,cAFW;AAGpBC,EAAAA,MAAM,EAAE,MAHY;AAIpBC,EAAAA,UAAU,EAAE,uBAJQ;AAKpBC,EAAAA,QAAQ,EAAE;AALU,CAAtB;;IAQMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;;AADgB,UAWlBC,YAXkB,GAWH,UAAAC,KAAK,EAAI;AAAA,UAChBC,KADgB,GACND,KAAK,CAACZ,MADA,CAChBa,KADgB;;AAEtB,YAAKC,QAAL,CAAc;AAAED,QAAAA,KAAK,EAALA;AAAF,OAAd;;AACA,YAAKE,kBAAL,CAAwBF,KAAxB;AACD,KAfiB;;AAAA,UAkElBG,gBAlEkB,GAkEC,UAACC,IAAD,EAAOC,GAAP,EAAe;AAChC,UAAIC,SAAS,GAAG,MAAKC,KAAL,CAAWD,SAAX,CAAqBE,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACJ,GAAF,KAAUA,GAAd;AAAA,OAA7B,EAAgD,CAAhD,CAAhB;;AACAC,MAAAA,SAAS,CAACF,IAAV,GAAiBA,IAAjB;;AACA,YAAKH,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAEA,SAAS,IAAE,MAAKC,KAAL,CAAWD;AAAnC,OAAd;AACD,KAtEiB;;AAAA,UAwElBI,gBAxEkB,GAwEC,UAACC,IAAD,EAAON,GAAP,EAAe;AAChC,UAAIO,QAAQ,GAAG,MAAKL,KAAL,CAAWD,SAAX,CAAqBE,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACJ,GAAF,KAAUA,GAAd;AAAA,OAA7B,EAAgD,CAAhD,CAAf;;AACAO,MAAAA,QAAQ,CAACD,IAAT,GAAgBA,IAAhB;;AACA,YAAKV,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAEM,QAAQ,IAAE,MAAKL,KAAL,CAAWD;AAAlC,OAAd;AACD,KA5EiB;;AAAA,UA8ElBO,eA9EkB,GA8EA,UAACC,GAAD,EAAMT,GAAN,EAAc;AAC9B,UAAIO,QAAQ,GAAG,MAAKL,KAAL,CAAWD,SAAX,CAAqBE,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACJ,GAAF,KAAUA,GAAd;AAAA,OAA7B,EAAgD,CAAhD,CAAf;;AACAO,MAAAA,QAAQ,CAACE,GAAT,GAAeA,GAAf;;AACA,YAAKb,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAEM,QAAQ,IAAE,MAAKL,KAAL,CAAWD;AAAlC,OAAd;AACD,KAlFiB;;AAAA,UAoFlBS,eApFkB,GAoFA,UAACC,GAAD,EAAMX,GAAN,EAAc;AAC9B,UAAIO,QAAQ,GAAG,MAAKL,KAAL,CAAWD,SAAX,CAAqBE,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACJ,GAAF,KAAUA,GAAd;AAAA,OAA7B,EAAgD,CAAhD,CAAf;;AACAO,MAAAA,QAAQ,CAACI,GAAT,GAAeA,GAAf;;AACA,YAAKf,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAEM,QAAQ,IAAE,MAAKL,KAAL,CAAWD;AAAlC,OAAd;AACD,KAxFiB;;AAAA,UA0FlBW,gBA1FkB,GA0FC,UAACC,IAAD,EAAOb,GAAP,EAAe;AAChC,UAAIO,QAAQ,GAAG,MAAKL,KAAL,CAAWD,SAAX,CAAqBE,MAArB,CAA4B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACJ,GAAF,KAAUA,GAAd;AAAA,OAA7B,EAAgD,CAAhD,CAAf;;AACA,aAAOO,QAAQ,CAACE,GAAhB;AACA,aAAOF,QAAQ,CAACI,GAAhB;AACA,aAAOJ,QAAQ,CAACD,IAAhB;AACA,aAAOC,QAAQ,CAACR,IAAhB;AACAQ,MAAAA,QAAQ,CAACO,SAAT,GAAqBD,IAAI,CAACjC,UAAL,CAAgB,WAAhB,EAA6B,EAA7B,CAArB;;AACA,YAAKgB,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAEM,QAAQ,IAAE,MAAKL,KAAL,CAAWD;AAAlC,OAAd;AACD,KAlGiB;;AAAA,UAqIlBc,SArIkB,GAqIN,UAAArB,KAAK,EAAI,CACnB;AACD,KAvIiB;;AAAA,UA8IlBsB,MA9IkB,GA8IT,UAAAC,CAAC;AAAA,aAAI,MAAKrB,QAAL,CAAc,UAAAM,KAAK;AAAA,eAAK;AAAEgB,UAAAA,SAAS,EAAE,CAAChB,KAAK,CAACgB;AAApB,SAAL;AAAA,OAAnB,CAAJ;AAAA,KA9IQ;;AAAA,UAgJlBC,YAhJkB,GAgJH,UAAAF,CAAC,EAAI;AAClB,YAAKD,MAAL;;AACA,YAAKxB,KAAL,CAAW4B,QAAX;AACD,KAnJiB;;AAEhB,UAAKlB,KAAL,GAAa;AACXP,MAAAA,KAAK,EAAE,EADI;AAEXM,MAAAA,SAAS,EAAE,EAFA;AAGXoB,MAAAA,SAAS,EAAE,KAHA;AAIXH,MAAAA,SAAS,EAAE,IAJA;AAKXI,MAAAA,MAAM,EAAE;AALG,KAAb;AAFgB;AASjB;;;;uCAQkB3B,K,EAAO;AAAA;;AACxB,UAAI4B,aAAa,GAAG,cAApB;AACA,UAAIC,OAAO,GAAG7B,KAAK,CAAC8B,KAAN,CAAYF,aAAZ,CAAd;;AAEA,UAAIC,OAAJ,EAAY;AACVA,QAAAA,OAAO,sBAAO,IAAIE,GAAJ,CAAQF,OAAR,CAAP,CAAP;AACA,YAAIG,OAAO,GAAG,CAAC,CAAf;AACAH,QAAAA,OAAO,GAAGA,OAAO,CAACI,GAAR,CAAY,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACjD,UAAF,CAAa,IAAb,EAAmB,EAAnB,EAAuBA,UAAvB,CAAkC,IAAlC,EAAwC,EAAxC,CAAJ;AAAA,SAAb,CAAV;AAEA,YAAIqB,SAAS,GAAG,EAAhB;AAEAuB,QAAAA,OAAO,CAACI,GAAR,CAAY,UAAAC,CAAC,EAAI;AACfF,UAAAA,OAAO;;AACP,cAAIH,OAAO,CAAC7C,MAAR,KAAmB,MAAI,CAACuB,KAAL,CAAWD,SAAX,CAAqBtB,MAA5C,EAAmD;AACjD;AACA,gBAAI8C,KAAK,GAAG,MAAI,CAACvB,KAAL,CAAWD,SAAX,CAAqBE,MAArB,CAA4B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACS,IAAF,KAAWgB,CAAf;AAAA,aAA7B,CAAZ;;AAEA,gBAAIJ,KAAK,CAAC9C,MAAN,GAAe,CAAnB,EAAqB;AACnB8C,cAAAA,KAAK,CAAC,CAAD,CAAL,CAASzB,GAAT,GAAe2B,OAAf,CADmB,CAEnB;;AACA1B,cAAAA,SAAS,CAAC6B,IAAV,CAAeL,KAAK,CAAC,CAAD,CAApB;AAED,aALD,MAKM;AACJ;AACAxB,cAAAA,SAAS,CAAC6B,IAAV,CAAe;AAAE9B,gBAAAA,GAAG,EAAE2B,OAAP;AAAgBd,gBAAAA,IAAI,EAAEgB,CAAtB;AAAyBvB,gBAAAA,IAAI,EAAE,CAA/B;AAAkCG,gBAAAA,GAAG,EAAE,CAAvC;AAA0CE,gBAAAA,GAAG,EAAE,CAA/C;AAAkDZ,gBAAAA,IAAI,EAAE;AAAxD,eAAf;AACD;AAEF,WAdD,MAcO;AACL;AACA,gBAAIgC,SAAS,GAAG,MAAI,CAAC7B,KAAL,CAAWD,SAAX,CAAqBE,MAArB,CAA4B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACS,IAAF,KAAWgB,CAAf;AAAA,aAA7B,CAAhB;;AACA,gBAAIG,YAAY,GAAG,MAAI,CAAC9B,KAAL,CAAWD,SAAX,CAAqBE,MAArB,CAA4B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACJ,GAAF,KAAU2B,OAAd;AAAA,aAA7B,CAAnB;;AAEA,gBAAII,SAAS,CAACpD,MAAV,GAAmB,CAAvB,EAAyB;AACvB;AACAsB,cAAAA,SAAS,CAAC6B,IAAV,CAAeC,SAAS,CAAC,CAAD,CAAxB;AAED,aAJD,MAIO,IAAIC,YAAY,CAACrD,MAAb,GAAsB,CAA1B,EAA4B;AACjC;AACAqD,cAAAA,YAAY,CAAC,CAAD,CAAZ,CAAgBnB,IAAhB,GAAuBgB,CAAvB;AACA5B,cAAAA,SAAS,CAAC6B,IAAV,CAAeE,YAAY,CAAC,CAAD,CAA3B;AACD;AACF;AACF,SA/BD;AAgCA,aAAKpC,QAAL,CAAc;AAAEK,UAAAA,SAAS,EAATA;AAAF,SAAd;AACD,OAxCD,MAwCO;AACL,aAAKL,QAAL,CAAc;AAAEK,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF;;;mCAoCcgC,I,EAAM;AAAA;;AAAA,UACbpB,IADa,GACCoB,IADD,CACbpB,IADa;AAAA,UACPb,GADO,GACCiC,IADD,CACPjC,GADO;AAGnB,UAAIkC,SAAS,GAAG,kBAAhB;AACA,UAAIT,KAAK,GAAGS,SAAS,CAACC,IAAV,CAAetB,IAAf,CAAZ;;AAEA,UAAIY,KAAJ,EAAU;AACR,eACE,oBAAC,SAAD;AACE,UAAA,GAAG,EAAGzB,GADR;AAEE,UAAA,MAAM,EAAEyB,KAAK,CAAC,CAAD,CAFf;AAGE,UAAA,IAAI,EAAGZ,IAHT;AAIE,UAAA,YAAY,EAAG,sBAACA,IAAD;AAAA,mBAAU,MAAI,CAACD,gBAAL,CAAsBC,IAAtB,EAA4Bb,GAA5B,CAAV;AAAA,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAdkB,UAgBbS,GAhBa,GAgBYwB,IAhBZ,CAgBbxB,GAhBa;AAAA,UAgBRE,GAhBQ,GAgBYsB,IAhBZ,CAgBRtB,GAhBQ;AAAA,UAgBHL,IAhBG,GAgBY2B,IAhBZ,CAgBH3B,IAhBG;AAAA,UAgBGP,IAhBH,GAgBYkC,IAhBZ,CAgBGlC,IAhBH;AAiBnB,aACE,oBAAC,YAAD;AACE,QAAA,YAAY,EAAE,sBAACA,IAAD,EAAOC,GAAP;AAAA,iBAAe,MAAI,CAACF,gBAAL,CAAsBC,IAAtB,EAA4BC,GAA5B,CAAf;AAAA,SADhB;AAEE,QAAA,YAAY,EAAE,sBAACM,IAAD,EAAON,GAAP;AAAA,iBAAe,MAAI,CAACK,gBAAL,CAAsBC,IAAtB,EAA4BN,GAA5B,CAAf;AAAA,SAFhB;AAGE,QAAA,WAAW,EAAE,qBAACS,GAAD,EAAMT,GAAN;AAAA,iBAAc,MAAI,CAACQ,eAAL,CAAqBC,GAArB,EAA0BT,GAA1B,CAAd;AAAA,SAHf;AAIE,QAAA,WAAW,EAAE,qBAACW,GAAD,EAAMX,GAAN;AAAA,iBAAc,MAAI,CAACU,eAAL,CAAqBC,GAArB,EAA0BX,GAA1B,CAAd;AAAA,SAJf;AAKE,QAAA,SAAS,EAAGA,GALd;AAME,QAAA,IAAI,EAAGD,IANT;AAOE,QAAA,GAAG,EAAGU,GAPR;AAQE,QAAA,GAAG,EAAGE,GARR;AASE,QAAA,IAAI,EAAGL,IATT;AAUE,QAAA,IAAI,EAAGO,IAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAcD;;;mCAMc;AAAA,UACPZ,SADO,GACO,KAAKC,KADZ,CACPD,SADO;AAEb,aAAOA,SAAP;AACD;;;6BASQ;AAAA;;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACDD,SADC,eACDA,SADC;AAAA,UACUoB,SADV,eACUA,SADV;AAAA,UACqBH,SADrB,eACqBA,SADrB;AAEP,UAAIlB,GAAG,GAAG,KAAKR,KAAL,CAAW4C,SAArB,CAFO,CAGP;;AACA,UAAIC,WAAW,GAAG;AAChBC,QAAAA,KAAK,EAAE,OADS;AAEhBnD,QAAAA,OAAO,EAAEc,SAAS,CAACtB,MAAV,GAAmB,CAAnB,GAAuB,cAAvB,GAAwC;AAFjC,OAAlB;AAKAsB,MAAAA,SAAS,GAAGA,SAAS,CAAC2B,GAAV,CAAc,UAAAW,CAAC;AAAA,eAAI,MAAI,CAACC,cAAL,CAAoBD,CAApB,CAAJ;AAAA,OAAf,CAAZ;AACA,aACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAErB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAEG,SAAS,GAAGrB,GAAG,GAAC,GAAP,GAAa,IAA3C;AAAiD,QAAA,QAAQ,EAAE,KAA3D;AAAkE,QAAA,QAAQ,EAAE,kBAAAN,KAAK;AAAA,iBAAI,MAAI,CAACqB,SAAL,CAAerB,KAAf,CAAJ;AAAA,SAAjF;AAA6G,QAAA,GAAG,EAAGM,GAAG,GAAC,GAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAG,KADd;AAEE,QAAA,MAAM,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,QAAP;AACI,UAAA,WAAW,EAAG,oBADlB;AAEI,UAAA,QAAQ,EAAG,IAFf;AAGI,UAAA,KAAK,EAAG,KAAKE,KAAL,CAAWP,KAHvB;AAII,UAAA,QAAQ,EAAG,kBAAAD,KAAK;AAAA,mBAAI,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAJ;AAAA,WAJpB;AAKI,UAAA,GAAG,EAAGM,GAAG,GAAC,GALd;AAMI,UAAA,KAAK,EAAGf,aANZ;AAOI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACW,QAAL,CAAc;AAAEyB,cAAAA,SAAS,EAAEpB,SAAS,CAACtB,MAAV,GAAmB;AAAhC,aAAd,CAAN;AAAA,WAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAUE,oBAAC,MAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,KAAK,EAAG0D,WAFV;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACzC,QAAL,CAAc;AAAEyB,cAAAA,SAAS,EAAE,CAACA;AAAd,aAAd,CAAN;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIIA,SAAS,GAAG,MAAH,GAAY,MAJzB,CAVF,EAgBE,oBAAC,MAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,oBAAOgB,WAAP;AAAoBlD,YAAAA,OAAO,EAAE;AAA7B,YAHP;AAIE,UAAA,OAAO,EAAG,KAAKgC,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CAhBF,CAHJ;AA6BE,QAAA,GAAG,EAAGnB,GAAG,GAAC,GA7BZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA8BE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,SADH,CA9BF,CADF,CADF,CADF;AAwCD;;;;EAxMyBvC,S;;AA2M5B,eAAe6B,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Input, Form, Collapse, Icon } from 'antd';\r\nimport VariableForm from './VariableForm'\r\nimport NameInput from './NameInput'\r\nimport ObjectInput from './ObjectInput'\r\nimport Disappear from './Disappear'\r\n\r\nconst Panel = Collapse.Panel;\r\n\r\nString.prototype.replaceAt=function(index, replacement) {\r\n    return this.substr(0, index+1) + replacement+ this.substr(index + replacement.length);\r\n}\r\nString.prototype.replaceAll = function(search, replacement) {\r\n    var target = this;\r\n    return target.replace(new RegExp(search, 'g'), replacement);\r\n};\r\n\r\nconst TextAreaStyle = {\r\n  width: '80%',\r\n  display: 'inline-block',\r\n  border: 'none',\r\n  fontFamily: \"'Sarabun', sans-serif\",\r\n  fontSize: '2em',\r\n}\r\n\r\nclass QuestionInput extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      variables: [],\r\n      isFocused: false,\r\n      isVisible: true,\r\n      height: 100,\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    let { value } = event.target;\r\n    this.setState({ value });\r\n    this.parseVariableNames(value);\r\n  }\r\n\r\n  parseVariableNames(value) {\r\n    let variableRegex = /\\[[^\\[]*?\\]/g;\r\n    let matches = value.match(variableRegex);\r\n\r\n    if (matches){\r\n      matches = [...new Set(matches)]\r\n      let counter = -1;\r\n      matches = matches.map(m => m.replaceAll(/\\[/, \"\").replaceAll(/\\]/, \"\"));\r\n\r\n      let variables = []\r\n\r\n      matches.map(m => {\r\n        counter++;\r\n        if (matches.length !== this.state.variables.length){\r\n          // new variable created\r\n          let match = this.state.variables.filter(k => k.name === m)\r\n\r\n          if (match.length > 0){\r\n            match[0].key = counter;\r\n            // variable already exists, so we just return it\r\n            variables.push(match[0]);\r\n\r\n          } else{\r\n            // new variable, so we must make a new blank version\r\n            variables.push({ key: counter, name: m, step: 1, min: 0, max: 0, unit: [] });\r\n          }\r\n\r\n        } else {\r\n          // unrelated update or a rename\r\n          let nameMatch = this.state.variables.filter(k => k.name === m);\r\n          let counterMatch = this.state.variables.filter(k => k.key === counter);\r\n\r\n          if (nameMatch.length > 0){\r\n            // name was found, was not renamed\r\n            variables.push(nameMatch[0]);\r\n\r\n          } else if (counterMatch.length > 0){\r\n            // name not found, so it must've been renamed\r\n            counterMatch[0].name = m;\r\n            variables.push(counterMatch[0]);\r\n          }\r\n        }\r\n      });\r\n      this.setState({ variables });\r\n    } else {\r\n      this.setState({ variables: [] });\r\n    }\r\n  }\r\n\r\n  handleUnitChange = (unit, key) => {\r\n    let variables = this.state.variables.filter(k => k.key === key)[0];\r\n    variables.unit = unit;\r\n    this.setState({ variables: variables&&this.state.variables });\r\n  }\r\n\r\n  handleStepChange = (step, key) => {\r\n    let variable = this.state.variables.filter(k => k.key === key)[0];\r\n    variable.step = step;\r\n    this.setState({ variables: variable&&this.state.variables });\r\n  }\r\n\r\n  handleMinChange = (min, key) => {\r\n    let variable = this.state.variables.filter(k => k.key === key)[0];\r\n    variable.min = min;\r\n    this.setState({ variables: variable&&this.state.variables });\r\n  }\r\n\r\n  handleMaxChange = (max, key) => {\r\n    let variable = this.state.variables.filter(k => k.key === key)[0];\r\n    variable.max = max;\r\n    this.setState({ variables: variable&&this.state.variables });\r\n  }\r\n\r\n  handleNameChange = (name, key) => {\r\n    let variable = this.state.variables.filter(k => k.key === key)[0];\r\n    delete variable.min;\r\n    delete variable.max;\r\n    delete variable.step;\r\n    delete variable.unit;\r\n    variable.nameValue = name.replaceAll('undefined', '');\r\n    this.setState({ variables: variable&&this.state.variables });\r\n  }\r\n\r\n  renderVariable(item) {\r\n    let { name, key } = item;\r\n\r\n    let nameRegex = /^name\\s*(\\d*)$/gi;\r\n    let match = nameRegex.exec(name);\r\n\r\n    if (match){\r\n      return (\r\n        <NameInput\r\n          key={ key }\r\n          number={match[1]}\r\n          name={ name }\r\n          onNameChange={ (name) => this.handleNameChange(name, key) }\r\n        />)\r\n    }\r\n\r\n    let { min, max, step, unit } = item;\r\n    return (\r\n      <VariableForm\r\n        onUnitChange={(unit, key) => this.handleUnitChange(unit, key) }\r\n        onStepChange={(step, key) => this.handleStepChange(step, key) }\r\n        onMinChange={(min, key) => this.handleMinChange(min, key) }\r\n        onMaxChange={(max, key) => this.handleMaxChange(max, key) }\r\n        uniqueKey={ key }\r\n        unit={ unit }\r\n        min={ min }\r\n        max={ max }\r\n        step={ step }\r\n        name={ name }\r\n      />\r\n    )\r\n  }\r\n\r\n  doNothing = event => {\r\n    // console.log('nothing');\r\n  }\r\n\r\n  exportAsJSON() {\r\n    let { variables } = this.state;\r\n    return variables;\r\n  }\r\n\r\n  toggle = e => this.setState(state => ({ isVisible: !state.isVisible }))\r\n\r\n  handleDelete = e => {\r\n    this.toggle()\r\n    this.props.onDelete()\r\n  }\r\n\r\n  render() {\r\n    let { variables, isFocused, isVisible } = this.state;\r\n    let key = this.props.uniqueKey;\r\n    // console.log('variables', JSON.stringify(variables));\r\n    let ButtonStyle = {\r\n      float: 'right',\r\n      display: variables.length > 0 ? 'inline-block' : 'none',\r\n    }\r\n\r\n    variables = variables.map(v => this.renderVariable(v));\r\n    return (\r\n      <Disappear isVisible={isVisible} >\r\n        <Collapse activeKey={isFocused ? key+'p' : null} bordered={false} onChange={event => this.doNothing(event) } key={ key+'c' }>\r\n          <Panel\r\n            showArrow={ false }\r\n            header={\r\n              <div>\r\n                <Input.TextArea\r\n                    placeholder={ 'Your question here' }\r\n                    autosize={ true }\r\n                    value={ this.state.value }\r\n                    onChange={ event => this.handleChange(event) }\r\n                    key={ key+'i' }\r\n                    style={ TextAreaStyle }\r\n                    onFocus={() => this.setState({ isFocused: variables.length > 0 }) }\r\n                  />\r\n                <Button\r\n                  size='large'\r\n                  style={ ButtonStyle }\r\n                  onClick={() => this.setState({ isFocused: !isFocused }) }>\r\n                  { isFocused ? 'Hide' : 'Show' }\r\n                </Button>\r\n                <Button\r\n                  size='large'\r\n                  type='danger'\r\n                  style={{ ...ButtonStyle, display: 'inline-block' }}\r\n                  onClick={ this.handleDelete }\r\n                  >\r\n                  <Icon type=\"minus\" />\r\n                </Button>\r\n                </div>}\r\n\r\n            key={ key+'p' }>\r\n            <Form>\r\n              {variables}\r\n            </Form>\r\n          </Panel>\r\n        </Collapse>\r\n      </Disappear>\r\n    )\r\n  };\r\n}\r\n\r\nexport default QuestionInput;\r\n"]},"metadata":{},"sourceType":"module"}