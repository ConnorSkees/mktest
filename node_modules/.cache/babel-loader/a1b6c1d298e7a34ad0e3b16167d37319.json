{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\TestCreator.jsx\";\nimport React, { Component } from 'react';\nimport { Card, Button, Icon } from 'antd';\nimport QuestionInput from './QuestionInput';\nimport MultipleChoice from './MultipleChoice';\nimport Disappear from './Disappear';\n\nfunction sleep(seconds) {\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      resolve();\n    }, seconds * 1000);\n  });\n}\n\nvar TestCreator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestCreator, _Component);\n\n  function TestCreator(props) {\n    var _this;\n\n    _classCallCheck(this, TestCreator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestCreator).call(this, props));\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function (e) {\n      console.log(e);\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      console.log(e);\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.addShortAnswer = function () {\n      var questionInputs = _this.state.questionInputs;\n      var key = Math.random(1, 300).toString();\n      questionInputs.push(React.createElement(MultipleChoice, {\n        onDelete: function onDelete() {\n          return _this.handleDelete(key);\n        },\n        ref: _this.myRef,\n        key: key,\n        uniqueKey: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n\n      _this.setState({\n        questionInputs: questionInputs\n      });\n    };\n\n    _this.handleExport = function () {\n      var val = _this.myRef.current;\n\n      if (val !== null) {\n        val.exportAsJSON();\n      }\n    };\n\n    _this.state = {\n      visible: false,\n      questionInputs: []\n    };\n    _this.myRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(TestCreator, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var questionInputs = this.state.questionInputs;\n\n      if (questionInputs.length === 0) {\n        this.addShortAnswer();\n      }\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function () {\n      var _handleDelete = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(key) {\n        var x, questionInputs;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return sleep(2);\n\n              case 2:\n                x = _context.sent;\n                questionInputs = this.state.questionInputs.filter(function (k) {\n                  return k.key !== key;\n                });\n                console.log(questionInputs);\n                this.setState({\n                  questionInputs: questionInputs\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleDelete(_x) {\n        return _handleDelete.apply(this, arguments);\n      }\n\n      return handleDelete;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var questionInputs = this.state.questionInputs;\n      return React.createElement(Card, {\n        title: 'Test Test #1',\n        extra: React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.handleExport();\n          },\n          type: \"dashed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Export\"),\n        style: {\n          width: '80%',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Short Answer Question\",\n        extra: React.createElement(Button, {\n          type: \"primary\",\n          style: {\n            float: 'right'\n          },\n          onClick: function onClick() {\n            return _this2.addShortAnswer();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        })),\n        style: {\n          width: '60%',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, questionInputs)));\n    }\n  }]);\n\n  return TestCreator;\n}(Component); // <Button type=\"primary\" onClick={this.showModal}>\n//   Open Modal\n// </Button>\n// <Modal\n//   title=\"Basic Modal\"\n//   visible={this.state.visible}\n//   onOk={this.handleOk}\n//   onCancel={this.handleCancel}\n// >\n//   <p>Some contents...</p>\n//   <p>Some contents...</p>\n//   <p>Some contents...</p>\n// </Modal>\n\n\nexport default TestCreator;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\TestCreator.jsx"],"names":["React","Component","Card","Button","Icon","QuestionInput","MultipleChoice","Disappear","sleep","seconds","Promise","resolve","setTimeout","TestCreator","props","showModal","setState","visible","handleOk","e","console","log","handleCancel","addShortAnswer","questionInputs","state","key","Math","random","toString","push","handleDelete","myRef","handleExport","val","current","exportAsJSON","createRef","length","x","filter","k","width","marginLeft","marginRight","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, Button, Icon } from 'antd';\r\nimport QuestionInput from './QuestionInput'\r\nimport MultipleChoice from './MultipleChoice'\r\nimport Disappear from './Disappear'\r\n\r\n\r\nfunction sleep(seconds) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, seconds*1000);\r\n  });\r\n}\r\n\r\nclass TestCreator extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      questionInputs: [\r\n\r\n       ],\r\n     }\r\n\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  componentWillMount(){\r\n    let { questionInputs } = this.state;\r\n    if (questionInputs.length === 0){\r\n      this.addShortAnswer();\r\n    }\r\n  }\r\n\r\n showModal = () => {\r\n   this.setState({\r\n     visible: true,\r\n   });\r\n }\r\n\r\n handleOk = (e) => {\r\n   console.log(e);\r\n   this.setState({\r\n     visible: false,\r\n   });\r\n }\r\n\r\n handleCancel = (e) => {\r\n     console.log(e);\r\n     this.setState({\r\n       visible: false,\r\n     });\r\n   }\r\n\r\n async handleDelete(key) {\r\n   var x = await sleep(2);\r\n   let questionInputs = this.state.questionInputs.filter(k => k.key !== key);\r\n   console.log(questionInputs)\r\n   this.setState({ questionInputs })\r\n }\r\n\r\n addShortAnswer = () => {\r\n   let { questionInputs } = this.state;\r\n   let key = Math.random(1, 300).toString()\r\n   questionInputs.push(<MultipleChoice\r\n                          onDelete={() => this.handleDelete(key)}\r\n                          ref={this.myRef}\r\n                          key={ key }\r\n                          uniqueKey={ key }\r\n                        />)\r\n   this.setState({ questionInputs })\r\n }\r\n\r\n handleExport = () => {\r\n   const val = this.myRef.current;\r\n   if (val !== null) {\r\n     val.exportAsJSON();\r\n   }\r\n }\r\n\r\n  render() {\r\n    let { questionInputs } = this.state;\r\n\r\n    return (\r\n      <Card\r\n        title={ 'Test Test #1' }\r\n        extra={<Button onClick={() => this.handleExport() } type=\"dashed\">Export</Button>}\r\n        style={{ width: '80%', marginLeft: 'auto', marginRight: 'auto' }}\r\n      >\r\n      <div>\r\n        <Card\r\n          title=\"Short Answer Question\"\r\n          extra={<Button type=\"primary\" style={{ float: 'right' }} onClick={ () => this.addShortAnswer() }>\r\n            <Icon type=\"plus\" />\r\n          </Button>}\r\n          style={{ width: '60%', marginLeft: 'auto', marginRight: 'auto' }}\r\n          >\r\n            { questionInputs }\r\n        </Card>\r\n      </div>\r\n    </Card>\r\n\r\n    )\r\n  };\r\n}\r\n\r\n// <Button type=\"primary\" onClick={this.showModal}>\r\n//   Open Modal\r\n// </Button>\r\n// <Modal\r\n//   title=\"Basic Modal\"\r\n//   visible={this.state.visible}\r\n//   onOk={this.handleOk}\r\n//   onCancel={this.handleCancel}\r\n// >\r\n//   <p>Some contents...</p>\r\n//   <p>Some contents...</p>\r\n//   <p>Some contents...</p>\r\n// </Modal>\r\n\r\n\r\nexport default TestCreator;\r\n"]},"metadata":{},"sourceType":"module"}