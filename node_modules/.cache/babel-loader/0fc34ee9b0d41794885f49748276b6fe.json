{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\VariablePicker.jsx\";\nimport React, { Component } from 'react';\nimport { Switch, Cascader } from 'antd';\n\nfunction toTitleCase(str) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n\nfunction convertToDict(arr) {\n  arr = arr.map(function (l) {\n    return {\n      value: l,\n      label: toTitleCase(l),\n      isParent: false\n    };\n  });\n  return arr;\n}\n\nvar metricUnits = convertToDict(['meter', 'gram', 'second', 'ampere', 'kelvin', 'mole', 'candela', 'liter'].sort());\nvar derivedUnits = convertToDict(['radian', 'newton', 'pascal', 'joule', 'watt', 'coulomb', 'volt', 'farad', 'ohm', 'tesla', 'celsius', 'hour', 'minute'].sort());\nvar customaryLength = convertToDict(['inch', 'foot', 'yard', 'mile'].sort());\nvar customaryArea = convertToDict(['acre'].sort());\nvar customaryMass = convertToDict(['ounce', 'pound', 'ton'].sort());\nvar customaryVolume = convertToDict(['teaspoon', 'tablespoon', 'fluid ounce', 'cup', 'pint', 'quart', 'gallon'].sort());\nvar options = [{\n  value: 'none',\n  label: 'None',\n  isParent: false\n}, {\n  value: 'metricUnits',\n  label: 'Metric Units',\n  isParent: true,\n  children: _toConsumableArray(metricUnits)\n}, {\n  value: 'derivedUnits',\n  label: 'Derived SI Units',\n  isParent: true,\n  children: _toConsumableArray(derivedUnits)\n}, {\n  value: 'customaryUnits',\n  label: 'Customary Units',\n  isParent: true,\n  children: [{\n    value: 'customaryArea',\n    label: 'Area',\n    isParent: true,\n    children: _toConsumableArray(customaryArea)\n  }, {\n    value: 'customaryMass',\n    label: 'Mass',\n    isParent: true,\n    children: _toConsumableArray(customaryMass)\n  }, {\n    value: 'customaryLength',\n    label: 'Length',\n    isParent: true,\n    children: _toConsumableArray(customaryLength)\n  }, {\n    value: 'customaryVolume',\n    label: 'Volume',\n    isParent: true,\n    children: _toConsumableArray(customaryVolume)\n  }]\n}];\n\nvar displayRender = function displayRender(labels, selectedOptions) {\n  return labels.map(function (label, i) {\n    var option = selectedOptions[i];\n\n    if (!option.isParent) {\n      return React.createElement(\"span\", {\n        key: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, label);\n    }\n  });\n};\n\nvar VariablePicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VariablePicker, _Component);\n\n  function VariablePicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VariablePicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VariablePicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isMetric: true\n    };\n    return _this;\n  }\n\n  _createClass(VariablePicker, [{\n    key: \"render\",\n    // <div className={ 'variable-label' } >Unit:</div>\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Cascader, {\n        size: 'large',\n        value: this.props.value,\n        options: options,\n        placeholder: \"Unit\",\n        displayRender: displayRender,\n        onChange: function onChange(value) {\n          return _this2.props.onChange(value);\n        },\n        style: {\n          fontSize: '1.25em'\n        },\n        showSearch: true,\n        filter: function filter(input, option) {\n          var children = option.props.children;\n          children = children.filter(function (x) {\n            return x !== undefined;\n          });\n          children = children.reduce(function (a, b) {\n            return a + b;\n          }).toLowerCase();\n          return children.indexOf(input.toLowerCase().trim()) > -1;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: 'variable-label',\n        style: {\n          width: '135px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Metric Prefixes:\"), React.createElement(Switch, {\n        size: \"default\",\n        checked: this.state.isMetric,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return VariablePicker;\n}(Component);\n\nexport default VariablePicker;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\VariablePicker.jsx"],"names":["React","Component","Switch","Cascader","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","convertToDict","arr","map","l","value","label","isParent","metricUnits","sort","derivedUnits","customaryLength","customaryArea","customaryMass","customaryVolume","options","children","displayRender","labels","selectedOptions","i","option","VariablePicker","state","isMetric","props","onChange","fontSize","input","filter","x","undefined","reduce","a","b","indexOf","trim","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Switch, Cascader } from 'antd';\r\n\r\nfunction toTitleCase(str) {\r\n        return str.replace(\r\n            /\\w\\S*/g,\r\n            function(txt) {\r\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n            }\r\n        );\r\n    }\r\n\r\nfunction convertToDict(arr){\r\n  arr = arr.map(l => {\r\n        return ({\r\n          value: l,\r\n          label: toTitleCase(l),\r\n          isParent: false,\r\n        })\r\n      });\r\n  return arr\r\n}\r\n\r\nconst metricUnits = convertToDict(['meter', 'gram', 'second', 'ampere', 'kelvin', 'mole', 'candela', 'liter'].sort());\r\nconst derivedUnits = convertToDict(['radian', 'newton', 'pascal', 'joule',\r\n                                    'watt', 'coulomb', 'volt', 'farad', 'ohm',\r\n                                    'tesla', 'celsius', 'hour', 'minute'].sort());\r\n\r\nconst customaryLength = convertToDict(['inch', 'foot', 'yard', 'mile'].sort())\r\nconst customaryArea = convertToDict(['acre'].sort())\r\nconst customaryMass = convertToDict(['ounce', 'pound', 'ton',].sort())\r\nconst customaryVolume = convertToDict(['teaspoon', 'tablespoon', 'fluid ounce',\r\n                                       'cup', 'pint', 'quart', 'gallon', ].sort())\r\n\r\nconst options = [\r\n  {\r\n    value: 'none',\r\n    label: 'None',\r\n    isParent: false,\r\n  },\r\n  {\r\n    value: 'metricUnits',\r\n    label: 'Metric Units',\r\n    isParent: true,\r\n    children: [\r\n      ...metricUnits\r\n    ],\r\n  },\r\n  {\r\n    value: 'derivedUnits',\r\n    label: 'Derived SI Units',\r\n    isParent: true,\r\n    children: [\r\n      ...derivedUnits\r\n    ],\r\n  },\r\n  {\r\n    value: 'customaryUnits',\r\n    label: 'Customary Units',\r\n    isParent: true,\r\n    children: [\r\n      {\r\n        value: 'customaryArea',\r\n        label: 'Area',\r\n        isParent: true,\r\n        children: [\r\n          ...customaryArea\r\n        ],\r\n      },\r\n      {\r\n        value: 'customaryMass',\r\n        label: 'Mass',\r\n        isParent: true,\r\n        children: [\r\n          ...customaryMass\r\n        ],\r\n      },\r\n      {\r\n        value: 'customaryLength',\r\n        label: 'Length',\r\n        isParent: true,\r\n        children: [\r\n          ...customaryLength\r\n        ],\r\n      },\r\n      {\r\n        value: 'customaryVolume',\r\n        label: 'Volume',\r\n        isParent: true,\r\n        children: [\r\n          ...customaryVolume\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst displayRender = (labels, selectedOptions) => labels.map((label, i) => {\r\n  const option = selectedOptions[i];\r\n  if (! option.isParent){\r\n      return <span key={option.value}>{label}</span>;\r\n    }\r\n});\r\n\r\nclass VariablePicker extends Component {\r\n  state = {\r\n    isMetric: true\r\n  };\r\n  // <div className={ 'variable-label' } >Unit:</div>\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Cascader\r\n          size={ 'large' }\r\n          value={ this.props.value }\r\n          options={options}\r\n          placeholder=\"Unit\"\r\n          displayRender={displayRender}\r\n          onChange={value => this.props.onChange(value) }\r\n          style={{ fontSize: '1.25em' }}\r\n          showSearch={true}\r\n          filter={(input, option) => {\r\n            let { children } = option.props;\r\n            children = children.filter(x => x !== undefined)\r\n            children = children.reduce((a, b) => a+b).toLowerCase();\r\n            return children.indexOf(input.toLowerCase().trim()) > -1;\r\n          }}\r\n        />\r\n        <br />\r\n        <div className={ 'variable-label' } style={{ width: '135px' }}>Metric Prefixes:</div>\r\n        <Switch size=\"default\" checked={this.state.isMetric} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default VariablePicker;\r\n"]},"metadata":{},"sourceType":"module"}