{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Connor\\\\Documents\\\\Atom Projects\\\\HTML CSS\\\\mktest\\\\src\\\\components\\\\QuestionInput.jsx\";\nimport React, { Component } from 'react';\nimport { Input, InputNumber, Tooltip, Divider, Form } from 'antd';\nimport VariableForm from './VariableForm';\n\nvar QuestionInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionInput, _Component);\n\n  function QuestionInput(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuestionInput).call(this, props));\n\n    _this.handleChange = function (event) {\n      var value = event.target.value;\n\n      _this.setState({\n        value: value\n      });\n\n      if (_this.state.value !== undefined) {\n        _this.parseVariables();\n      }\n    };\n\n    _this.state = {\n      value: _this.props.value,\n      variables: []\n    };\n    return _this;\n  }\n\n  _createClass(QuestionInput, [{\n    key: \"parseVariables\",\n    value: function parseVariables() {\n      var _this2 = this;\n\n      var value = this.state.value;\n      var variableRegex = /\\{.*?\\}/g;\n      var matches = value.match(variableRegex);\n\n      if (matches) {\n        matches = matches.map(function (item) {\n          render: _this2.createVariable(item);\n        });\n        this.setState({\n          variables: matches\n        });\n      }\n    }\n  }, {\n    key: \"createVariable\",\n    value: function createVariable(item) {\n      item = item.replace(\"{\", \"\");\n      item = item.replace(\"}\", \"\");\n      return React.createElement(VariableForm, {\n        name: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var variables = this.state.variables;\n      variables = variables.map(function (v) {\n        return v.render;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.value,\n        onChange: function onChange(event) {\n          return _this3.handleChange(event);\n        },\n        onBlur: function onBlur(event) {\n          return _this3.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, variables));\n    }\n  }]);\n\n  return QuestionInput;\n}(Component);\n\nexport default QuestionInput;","map":{"version":3,"sources":["C:\\Users\\Connor\\Documents\\Atom Projects\\HTML CSS\\mktest\\src\\components\\QuestionInput.jsx"],"names":["React","Component","Input","InputNumber","Tooltip","Divider","Form","VariableForm","QuestionInput","props","handleChange","event","value","target","setState","state","undefined","parseVariables","variables","variableRegex","matches","match","map","item","render","createVariable","replace","v"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,OAAtC,EAA+CC,IAA/C,QAA2D,MAA3D;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;;AADgB,UAQlBC,YARkB,GAQH,UAAAC,KAAK,EAAI;AAAA,UAChBC,KADgB,GACND,KAAK,CAACE,MADA,CAChBD,KADgB;;AAEtB,YAAKE,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAALA;AAAF,OAAd;;AACA,UAAG,MAAKG,KAAL,CAAWH,KAAX,KAAqBI,SAAxB,EAAkC;AAChC,cAAKC,cAAL;AACD;AACF,KAdiB;;AAEhB,UAAKF,KAAL,GAAa;AACXH,MAAAA,KAAK,EAAE,MAAKH,KAAL,CAAWG,KADP;AAEXM,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFgB;AAMjB;;;;qCAUgB;AAAA;;AAAA,UACTN,KADS,GACC,KAAKG,KADN,CACTH,KADS;AAEf,UAAIO,aAAa,GAAG,UAApB;AACA,UAAIC,OAAO,GAAGR,KAAK,CAACS,KAAN,CAAYF,aAAZ,CAAd;;AACA,UAAIC,OAAJ,EAAY;AACVA,QAAAA,OAAO,GAAGA,OAAO,CAACE,GAAR,CAAY,UAAAC,IAAI,EAAI;AAACC,UAAAA,MAAM,EAAE,MAAI,CAACC,cAAL,CAAoBF,IAApB;AAA0B,SAAvD,CAAV;AACA,aAAKT,QAAL,CAAc;AAAEI,UAAAA,SAAS,EAAEE;AAAb,SAAd;AACD;AACF;;;mCAEcG,I,EAAM;AACnBA,MAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;AACAH,MAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;AACA,aACE,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAGH,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;6BAEQ;AAAA;;AAAA,UACDL,SADC,GACa,KAAKH,KADlB,CACDG,SADC;AAEPA,MAAAA,SAAS,GAAGA,SAAS,CAACI,GAAV,CAAc,UAAAK,CAAC;AAAA,eAAIA,CAAC,CAACH,MAAN;AAAA,OAAf,CAAZ;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAG,KAAKT,KAAL,CAAWH,KADrB;AAEE,QAAA,QAAQ,EAAE,kBAAAD,KAAK;AAAA,iBAAI,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAJ;AAAA,SAFjB;AAGE,QAAA,MAAM,EAAE,gBAAAA,KAAK;AAAA,iBAAI,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAJ;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGO,SADH,CANF,CADF;AAaD;;;;EAnDyBjB,S;;AAsD5B,eAAeO,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input, InputNumber, Tooltip, Divider, Form } from 'antd';\r\nimport VariableForm from './VariableForm'\r\n\r\nclass QuestionInput extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: this.props.value,\r\n      variables: [],\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    let { value } = event.target\r\n    this.setState({ value })\r\n    if(this.state.value !== undefined){\r\n      this.parseVariables();\r\n    }\r\n  }\r\n\r\n  parseVariables() {\r\n    let { value } = this.state;\r\n    let variableRegex = /\\{.*?\\}/g;\r\n    let matches = value.match(variableRegex);\r\n    if (matches){\r\n      matches = matches.map(item => {render: this.createVariable(item)})\r\n      this.setState({ variables: matches })\r\n    }\r\n  }\r\n\r\n  createVariable(item) {\r\n    item = item.replace(\"{\", \"\");\r\n    item = item.replace(\"}\", \"\");\r\n    return (\r\n      <VariableForm name={ item } />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let { variables } = this.state;\r\n    variables = variables.map(v => v.render)\r\n    return (\r\n      <div>\r\n        <Input\r\n          value={ this.state.value }\r\n          onChange={event => this.handleChange(event) }\r\n          onBlur={event => this.handleChange(event) }\r\n          />\r\n        <Form>\r\n          {variables}\r\n        </Form>\r\n      </div>\r\n\r\n    )\r\n  };\r\n}\r\n\r\nexport default QuestionInput;\r\n"]},"metadata":{},"sourceType":"module"}